resources:
    aws:cloudfront_distribution:infracopilot-cf:
        CloudfrontDefaultCertificate: true
        DefaultCacheBehavior:
            AllowedMethods:
                - DELETE
                - GET
                - HEAD
                - OPTIONS
                - PATCH
                - POST
                - PUT
            CachedMethods:
                - HEAD
                - GET
            DefaultTtl: 3600
            ForwardedValues:
                Cookies:
                    Forward: none
                QueryString: true
            MaxTtl: 86400
            MinTtl: 0
            TargetOriginId: static-site
            ViewerProtocolPolicy: allow-all
        Enabled: true
        Origins:
            - CustomOriginConfig:
                HttpPort: 80
                HttpsPort: 443
                OriginProtocolPolicy: https-only
                OriginSslProtocols:
                    - TLSv1.2
                    - TLSv1
                    - SSLv3
                    - TLSv1.1
              DomainName: aws:api_stage:rest_api_6:api_stage-0#StageInvokeUrl
              OriginId: api_stage-0
              OriginPath: /stage
            - DomainName: aws:s3_bucket:ifcp-static-site#BucketRegionalDomainName
              OriginId: static-site
              S3OriginConfig:
                OriginAccessIdentity: aws:cloudfront_origin_access_identity:cloudfront_origin_access_identity-0#CloudfrontAccessIdentityPath
        Restrictions:
            GeoRestriction:
                RestrictionType: none
    aws:api_stage:rest_api_6:api_stage-0:
        Deployment: aws:api_deployment:rest_api_6:api_deployment-0
        RestApi: aws:rest_api:infracopilot-api
        StageName: stage
    aws:cloudfront_origin_access_identity:cloudfront_origin_access_identity-0:
        Comment: this is needed to set up S3 polices so that the S3 bucket is not public
    aws:api_deployment:rest_api_6:api_deployment-0:
        RestApi: aws:rest_api:infracopilot-api
        Triggers:
            rest_api_6_integration_0: rest_api_6_integration_0
            rest_api_6_integration_0_method: rest_api_6_integration_0_method
    aws:s3_bucket_policy:s3_bucket_policy-0:
        Bucket: aws:s3_bucket:ifcp-static-site
        Policy:
            Statement:
                - Action:
                    - s3:GetObject
                  Effect: Allow
                  Principal:
                    AWS:
                        - aws:cloudfront_origin_access_identity:cloudfront_origin_access_identity-0#IamArn
                  Resource:
                    - aws:s3_bucket:ifcp-static-site#AllBucketDirectory
            Version: "2012-10-17"
    aws:rest_api:infracopilot-api:
        BinaryMediaTypes:
            - application/octet-stream
            - image/*
    aws:s3_bucket:ifcp-static-site:
        ForceDestroy: true
        SSEAlgorithm: AES256
    aws:api_resource:infracopilot-api:api_resource-0:
        FullPath: /{proxy+}
        PathPart: '{proxy+}'
        RestApi: aws:rest_api:infracopilot-api
    aws:api_method:infracopilot-api:rest_api_6_integration_0_method:
        Authorization: NONE
        HttpMethod: ANY
        RequestParameters:
            method.request.path.proxy: true
        Resource: aws:api_resource:infracopilot-api:api_resource-0
        RestApi: aws:rest_api:infracopilot-api
    aws:api_integration:infracopilot-api:rest_api_6_integration_0:
        ConnectionType: VPC_LINK
        IntegrationHttpMethod: ANY
        Method: aws:api_method:infracopilot-api:rest_api_6_integration_0_method
        RequestParameters:
            integration.request.path.proxy: method.request.path.proxy
        Resource: aws:api_resource:infracopilot-api:api_resource-0
        RestApi: aws:rest_api:infracopilot-api
        Route: /{proxy+}
        Target: aws:load_balancer:infracopilot-lb
        Type: HTTP_PROXY
        Uri: aws:api_integration:infracopilot-api:rest_api_6_integration_0#LbUri
        VpcLink: aws:vpc_link:rest_api_6_integration_0-ecs_service_0
    aws:vpc_link:rest_api_6_integration_0-ecs_service_0:
        Target: aws:load_balancer:infracopilot-lb
    aws:load_balancer:infracopilot-lb:
        Scheme: internal
        Subnets:
            - aws:subnet:vpc-0:subnet-0
            - aws:subnet:vpc-0:subnet-1
        Type: network
    aws:load_balancer_listener:infracopilot-lb:rest_api_6_integration_0-ecs_service_0:
        DefaultActions:
            - TargetGroup: aws:target_group:rest-api-6-integ636d6a12
              Type: forward
        LoadBalancer: aws:load_balancer:infracopilot-lb
        Port: 80
        Protocol: TCP
    aws:target_group:rest-api-6-integ636d6a12:
        HealthCheck:
            Enabled: true
            HealthyThreshold: 5
            Interval: 30
            Path: /api/ping
            Protocol: TCP
            Timeout: 5
            UnhealthyThreshold: 2
        Port: 80
        Protocol: TCP
        TargetType: ip
        Vpc: aws:vpc:vpc-0
    aws:ecr_image:ecs_service_0-image:
        BaseImage: python:3.11-alpine
        Context: ..
        Dockerfile: Dockerfile
        Repo: aws:ecr_repo:ecr_repo-0
    aws:ecr_repo:ecr_repo-0:
        ForceDelete: true
    aws:ecs_cluster:ecs_cluster-0:
    aws:ecs_service:infracopilot:
        AssignPublicIp: false
        Cluster: aws:ecs_cluster:ecs_cluster-0
        DesiredCount: 1
        ForceNewDeployment: true
        LaunchType: FARGATE
        LoadBalancers:
            - ContainerName: ecs_service_0
              ContainerPort: 80
              TargetGroup: aws:target_group:rest-api-6-integ636d6a12
        SecurityGroups:
            - aws:security_group:vpc-0:ecs_service_0-security_group
        Subnets:
            - aws:subnet:vpc-0:subnet-0
            - aws:subnet:vpc-0:subnet-1
        TaskDefinition: aws:ecs_task_definition:ecs_service_0
    aws:ecs_task_definition:ecs_service_0:
        Cpu: "4096"
        EnvironmentVariables:
            ARCHITECTURE_BUCKET_NAME: aws:s3_bucket:ifcp-architecture-storage#BucketName
            BINARY_BUCKET_NAME: aws:s3_bucket:ifcp-binary-storage#BucketName
            DB_DATABASE: aws:rds_instance:infracopilot-db#DatabaseName
            DB_ENDPOINT: aws:rds_instance:infracopilot-db#Endpoint
            DB_PASSWORD: aws:rds_instance:infracopilot-db#Password
            DB_USERNAME: aws:rds_instance:infracopilot-db#Username
            FGA_CLIENT_ID: ifcp-fga-client-id
            FGA_MODEL_ID: ifcp-fga-model-id
            FGA_SECRET: ifcp-fga-secret
            FGA_STORE_ID: ifcp-fga-store-id
        ExecutionRole: aws:iam_role:ecs_service_0-execution-role
        Image: aws:ecr_image:ecs_service_0-image
        LogGroup: aws:log_group:ecs_service_0-log-group
        Memory: "8192"
        NetworkMode: awsvpc
        PortMappings:
            - ContainerPort: 80
              HostPort: 80
              Protocol: TCP
        Region: aws:region:region-0
        RequiresCompatibilities:
            - FARGATE
        TaskRole: aws:iam_role:ecs_service_0-execution-role
    aws:iam_role:ecs_service_0-execution-role:
        AssumeRolePolicyDoc:
            Statement:
                - Action:
                    - sts:AssumeRole
                  Effect: Allow
                  Principal:
                    Service:
                        - ecs-tasks.amazonaws.com
            Version: "2012-10-17"
        InlinePolicies:
            - Name: ifcp-architecture-storage-policy
              Policy:
                Statement:
                    - Action:
                        - s3:*
                      Effect: Allow
                      Resource:
                        - aws:s3_bucket:ifcp-architecture-storage#Arn
                        - aws:s3_bucket:ifcp-architecture-storage#AllBucketDirectory
                Version: "2012-10-17"
            - Name: ifcp-binary-storage-policy
              Policy:
                Statement:
                    - Action:
                        - s3:*
                      Effect: Allow
                      Resource:
                        - aws:s3_bucket:ifcp-binary-storage#Arn
                        - aws:s3_bucket:ifcp-binary-storage#AllBucketDirectory
                Version: "2012-10-17"
            - Name: infracopilot-db-policy
              Policy:
                Statement:
                    - Action:
                        - rds-db:connect
                      Effect: Allow
                      Resource:
                        - aws:rds_instance:infracopilot-db#RdsConnectionArn
                Version: "2012-10-17"
            - Name: ifcp-fga-model-id-policy
              Policy:
                Statement:
                    - Action:
                        - secretsmanager:DescribeSecret
                        - secretsmanager:GetSecretValue
                      Effect: Allow
                      Resource:
                        - aws:secret:ifcp-fga-model-id#Arn
                Version: "2012-10-17"
            - Name: ifcp-fga-store-id-policy
              Policy:
                Statement:
                    - Action:
                        - secretsmanager:DescribeSecret
                        - secretsmanager:GetSecretValue
                      Effect: Allow
                      Resource:
                        - aws:secret:ifcp-fga-store-id#Arn
                Version: "2012-10-17"
            - Name: ifcp-fga-secret-policy
              Policy:
                Statement:
                    - Action:
                        - secretsmanager:DescribeSecret
                        - secretsmanager:GetSecretValue
                      Effect: Allow
                      Resource:
                        - aws:secret:ifcp-fga-secret#Arn
                Version: "2012-10-17"
            - Name: ifcp-fga-client-id-policy
              Policy:
                Statement:
                    - Action:
                        - secretsmanager:DescribeSecret
                        - secretsmanager:GetSecretValue
                      Effect: Allow
                      Resource:
                        - aws:secret:ifcp-fga-client-id#Arn
                Version: "2012-10-17"
            - Name: ifcp-auth0-client-id-policy
              Policy:
                Statement:
                    - Action:
                        - secretsmanager:DescribeSecret
                        - secretsmanager:GetSecretValue
                      Effect: Allow
                      Resource:
                        - aws:secret:ifcp-auth0-client-id#Arn
                Version: "2012-10-17"
            - Name: ifcp-auth0-secret-policy
              Policy:
                Statement:
                    - Action:
                        - secretsmanager:DescribeSecret
                        - secretsmanager:GetSecretValue
                      Effect: Allow
                      Resource:
                        - aws:secret:ifcp-auth0-secret#Arn
                Version: "2012-10-17"
        ManagedPolicies:
            - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
    aws:log_group:ecs_service_0-log-group:
        LogGroupName: /aws/ecs/ecs_service_0
        RetentionInDays: 5
    aws:elastic_ip:subnet-0-route_table-nat_gateway-elastic_ip:
    aws:elastic_ip:subnet-1-route_table-nat_gateway-elastic_ip:
    aws:nat_gateway:subnet-2:subnet-0-route_table-nat_gateway:
        ElasticIp: aws:elastic_ip:subnet-0-route_table-nat_gateway-elastic_ip
        Subnet: aws:subnet:vpc-0:subnet-2
    aws:subnet:vpc-0:subnet-2:
        AvailabilityZone: aws:availability_zone:region-0:availability_zone-0
        CidrBlock: 10.0.0.0/18
        MapPublicIpOnLaunch: false
        RouteTable: aws:route_table:vpc-0:subnet-2-route_table
        Type: public
        Vpc: aws:vpc:vpc-0
    aws:route_table_association:subnet-2-subnet-2-route_table:
        RouteTable: aws:route_table:vpc-0:subnet-2-route_table
        Subnet: aws:subnet:vpc-0:subnet-2
    aws:route_table:vpc-0:subnet-2-route_table:
        Routes:
            - CidrBlock: 0.0.0.0/0
              Gateway: aws:internet_gateway:vpc-0:internet_gateway-0
        Vpc: aws:vpc:vpc-0
    aws:availability_zone:region-0:availability_zone-0:
        Index: 0
        Region: aws:region:region-0
    aws:internet_gateway:vpc-0:internet_gateway-0:
        Vpc: aws:vpc:vpc-0
    aws:nat_gateway:subnet-3:subnet-1-route_table-nat_gateway:
        ElasticIp: aws:elastic_ip:subnet-1-route_table-nat_gateway-elastic_ip
        Subnet: aws:subnet:vpc-0:subnet-3
    aws:subnet:vpc-0:subnet-3:
        AvailabilityZone: aws:availability_zone:region-0:availability_zone-1
        CidrBlock: 10.0.64.0/18
        MapPublicIpOnLaunch: false
        RouteTable: aws:route_table:vpc-0:subnet-3-route_table
        Type: public
        Vpc: aws:vpc:vpc-0
    aws:route_table_association:subnet-3-subnet-3-route_table:
        RouteTable: aws:route_table:vpc-0:subnet-3-route_table
        Subnet: aws:subnet:vpc-0:subnet-3
    aws:route_table:vpc-0:subnet-3-route_table:
        Routes:
            - CidrBlock: 0.0.0.0/0
              Gateway: aws:internet_gateway:vpc-0:internet_gateway-0
        Vpc: aws:vpc:vpc-0
    aws:availability_zone:region-0:availability_zone-1:
        Index: 1
        Region: aws:region:region-0
    aws:region:region-0:
    aws:rds_instance:infracopilot-db:
        AllocatedStorage: 20
        DatabaseName: main
        Engine: postgres
        EngineVersion: "13.10"
        IamDatabaseAuthenticationEnabled: true
        InstanceClass: db.t3.micro
        SecurityGroups:
            - aws:security_group:vpc-0:rds-instance-9-security_group
        SkipFinalSnapshot: true
        SubnetGroup: aws:rds_subnet_group:rds_subnet_group-0
    aws:rds_subnet_group:rds_subnet_group-0:
        Subnets:
            - aws:subnet:vpc-0:subnet-0
            - aws:subnet:vpc-0:subnet-1
    aws:subnet:vpc-0:subnet-0:
        AvailabilityZone: aws:availability_zone:region-0:availability_zone-0
        CidrBlock: 10.0.128.0/18
        MapPublicIpOnLaunch: false
        RouteTable: aws:route_table:vpc-0:subnet-0-route_table
        Type: private
        Vpc: aws:vpc:vpc-0
    aws:subnet:vpc-0:subnet-1:
        AvailabilityZone: aws:availability_zone:region-0:availability_zone-1
        CidrBlock: 10.0.192.0/18
        MapPublicIpOnLaunch: false
        RouteTable: aws:route_table:vpc-0:subnet-1-route_table
        Type: private
        Vpc: aws:vpc:vpc-0
    aws:route_table_association:subnet-0-subnet-0-route_table:
        RouteTable: aws:route_table:vpc-0:subnet-0-route_table
        Subnet: aws:subnet:vpc-0:subnet-0
    aws:SERVICE_API:subnet-0-ifcp-architecture-storage:
    aws:route_table_association:subnet-1-subnet-1-route_table:
        RouteTable: aws:route_table:vpc-0:subnet-1-route_table
        Subnet: aws:subnet:vpc-0:subnet-1
    aws:security_group:vpc-0:ecs_service_0-security_group:
        EgressRules:
            - CidrBlocks:
                - 0.0.0.0/0
              Description: Allows all outbound IPv4 traffic
              FromPort: 0
              Protocol: "-1"
              ToPort: 0
        IngressRules:
            - CidrBlocks:
                - 10.0.192.0/18
              Description: Allow ingress traffic from ip addresses within the subnet subnet-1
              FromPort: 0
              Protocol: "-1"
              ToPort: 0
            - Description: Allow ingress traffic from within the same security group
              FromPort: 0
              Protocol: "-1"
              Self: true
              ToPort: 0
            - CidrBlocks:
                - 10.0.128.0/18
              Description: Allow ingress traffic from ip addresses within the subnet subnet-0
              FromPort: 0
              Protocol: "-1"
              ToPort: 0
        Vpc: aws:vpc:vpc-0
    aws:security_group:vpc-0:rds-instance-9-security_group:
        EgressRules:
            - CidrBlocks:
                - 0.0.0.0/0
              Description: Allows all outbound IPv4 traffic
              FromPort: 0
              Protocol: "-1"
              ToPort: 0
        IngressRules:
            - Description: Allow ingress traffic from within the same security group
              FromPort: 0
              Protocol: "-1"
              Self: true
              ToPort: 0
            - CidrBlocks:
                - 10.0.128.0/18
              Description: Allow ingress traffic from ip addresses within the subnet subnet-0
              FromPort: 0
              Protocol: "-1"
              ToPort: 0
            - CidrBlocks:
                - 10.0.192.0/18
              Description: Allow ingress traffic from ip addresses within the subnet subnet-1
              FromPort: 0
              Protocol: "-1"
              ToPort: 0
        Vpc: aws:vpc:vpc-0
    aws:route_table:vpc-0:subnet-0-route_table:
        Routes:
            - CidrBlock: 0.0.0.0/0
              NatGateway: aws:nat_gateway:subnet-2:subnet-0-route_table-nat_gateway
        Vpc: aws:vpc:vpc-0
    aws:s3_bucket:ifcp-architecture-storage:
        ForceDestroy: true
        SSEAlgorithm: aws:kms
    aws:s3_bucket:ifcp-binary-storage:
        ForceDestroy: true
        SSEAlgorithm: aws:kms
    aws:secret:ifcp-auth0-client-id:
    aws:secret:ifcp-auth0-secret:
    aws:secret:ifcp-fga-client-id:
    aws:secret:ifcp-fga-model-id:
    aws:secret:ifcp-fga-secret:
    aws:secret:ifcp-fga-store-id:
    aws:route_table:vpc-0:subnet-1-route_table:
        Routes:
            - CidrBlock: 0.0.0.0/0
              NatGateway: aws:nat_gateway:subnet-3:subnet-1-route_table-nat_gateway
        Vpc: aws:vpc:vpc-0
    aws:vpc:vpc-0:
        CidrBlock: 10.0.0.0/16
        EnableDnsHostnames: true
        EnableDnsSupport: true
edges:
    aws:cloudfront_distribution:infracopilot-cf -> aws:api_stage:rest_api_6:api_stage-0:
    aws:cloudfront_distribution:infracopilot-cf -> aws:cloudfront_origin_access_identity:cloudfront_origin_access_identity-0:
    aws:cloudfront_distribution:infracopilot-cf -> aws:s3_bucket:ifcp-static-site:
    aws:api_stage:rest_api_6:api_stage-0 -> aws:api_deployment:rest_api_6:api_deployment-0:
    aws:api_stage:rest_api_6:api_stage-0 -> aws:rest_api:infracopilot-api:
    aws:cloudfront_origin_access_identity:cloudfront_origin_access_identity-0 -> aws:s3_bucket_policy:s3_bucket_policy-0:
    aws:api_deployment:rest_api_6:api_deployment-0 -> aws:api_integration:infracopilot-api:rest_api_6_integration_0:
    aws:api_deployment:rest_api_6:api_deployment-0 -> aws:api_method:infracopilot-api:rest_api_6_integration_0_method:
    aws:api_deployment:rest_api_6:api_deployment-0 -> aws:rest_api:infracopilot-api:
    aws:s3_bucket_policy:s3_bucket_policy-0 -> aws:s3_bucket:ifcp-static-site:
    aws:rest_api:infracopilot-api -> aws:api_integration:infracopilot-api:rest_api_6_integration_0:
    aws:rest_api:infracopilot-api -> aws:api_method:infracopilot-api:rest_api_6_integration_0_method:
    aws:rest_api:infracopilot-api -> aws:api_resource:infracopilot-api:api_resource-0:
    aws:api_resource:infracopilot-api:api_resource-0 -> aws:api_integration:infracopilot-api:rest_api_6_integration_0:
    aws:api_resource:infracopilot-api:api_resource-0 -> aws:api_method:infracopilot-api:rest_api_6_integration_0_method:
    aws:api_method:infracopilot-api:rest_api_6_integration_0_method -> aws:api_integration:infracopilot-api:rest_api_6_integration_0:
    aws:api_integration:infracopilot-api:rest_api_6_integration_0 -> aws:vpc_link:rest_api_6_integration_0-ecs_service_0:
    aws:vpc_link:rest_api_6_integration_0-ecs_service_0 -> aws:load_balancer:infracopilot-lb:
    aws:load_balancer:infracopilot-lb -> aws:load_balancer_listener:infracopilot-lb:rest_api_6_integration_0-ecs_service_0:
    aws:load_balancer:infracopilot-lb -> aws:subnet:vpc-0:subnet-0:
    aws:load_balancer:infracopilot-lb -> aws:subnet:vpc-0:subnet-1:
    aws:load_balancer_listener:infracopilot-lb:rest_api_6_integration_0-ecs_service_0 -> aws:target_group:rest-api-6-integ636d6a12:
    aws:target_group:rest-api-6-integ636d6a12 -> aws:ecs_service:infracopilot:
    aws:ecr_image:ecs_service_0-image -> aws:ecr_repo:ecr_repo-0:
    aws:ecs_service:infracopilot -> aws:ecs_cluster:ecs_cluster-0:
    aws:ecs_service:infracopilot -> aws:ecs_task_definition:ecs_service_0:
    aws:ecs_service:infracopilot -> aws:subnet:vpc-0:subnet-0:
    aws:ecs_service:infracopilot -> aws:subnet:vpc-0:subnet-1:
    aws:ecs_task_definition:ecs_service_0 -> aws:ecr_image:ecs_service_0-image:
    aws:ecs_task_definition:ecs_service_0 -> aws:iam_role:ecs_service_0-execution-role:
    aws:ecs_task_definition:ecs_service_0 -> aws:log_group:ecs_service_0-log-group:
    aws:ecs_task_definition:ecs_service_0 -> aws:region:region-0:
    aws:iam_role:ecs_service_0-execution-role -> aws:rds_instance:infracopilot-db:
    aws:iam_role:ecs_service_0-execution-role -> aws:s3_bucket:ifcp-architecture-storage:
    aws:iam_role:ecs_service_0-execution-role -> aws:s3_bucket:ifcp-binary-storage:
    aws:iam_role:ecs_service_0-execution-role -> aws:secret:ifcp-auth0-client-id:
    aws:iam_role:ecs_service_0-execution-role -> aws:secret:ifcp-auth0-secret:
    aws:iam_role:ecs_service_0-execution-role -> aws:secret:ifcp-fga-client-id:
    aws:iam_role:ecs_service_0-execution-role -> aws:secret:ifcp-fga-model-id:
    aws:iam_role:ecs_service_0-execution-role -> aws:secret:ifcp-fga-secret:
    aws:iam_role:ecs_service_0-execution-role -> aws:secret:ifcp-fga-store-id:
    aws:nat_gateway:subnet-2:subnet-0-route_table-nat_gateway -> aws:elastic_ip:subnet-0-route_table-nat_gateway-elastic_ip:
    aws:nat_gateway:subnet-2:subnet-0-route_table-nat_gateway -> aws:subnet:vpc-0:subnet-2:
    aws:subnet:vpc-0:subnet-2 -> aws:availability_zone:region-0:availability_zone-0:
    aws:subnet:vpc-0:subnet-2 -> aws:route_table_association:subnet-2-subnet-2-route_table:
    aws:subnet:vpc-0:subnet-2 -> aws:vpc:vpc-0:
    aws:route_table_association:subnet-2-subnet-2-route_table -> aws:route_table:vpc-0:subnet-2-route_table:
    aws:route_table:vpc-0:subnet-2-route_table -> aws:internet_gateway:vpc-0:internet_gateway-0:
    aws:route_table:vpc-0:subnet-2-route_table -> aws:vpc:vpc-0:
    aws:availability_zone:region-0:availability_zone-0 -> aws:region:region-0:
    aws:internet_gateway:vpc-0:internet_gateway-0 -> aws:vpc:vpc-0:
    aws:nat_gateway:subnet-3:subnet-1-route_table-nat_gateway -> aws:elastic_ip:subnet-1-route_table-nat_gateway-elastic_ip:
    aws:nat_gateway:subnet-3:subnet-1-route_table-nat_gateway -> aws:subnet:vpc-0:subnet-3:
    aws:subnet:vpc-0:subnet-3 -> aws:availability_zone:region-0:availability_zone-1:
    aws:subnet:vpc-0:subnet-3 -> aws:route_table_association:subnet-3-subnet-3-route_table:
    aws:subnet:vpc-0:subnet-3 -> aws:vpc:vpc-0:
    aws:route_table_association:subnet-3-subnet-3-route_table -> aws:route_table:vpc-0:subnet-3-route_table:
    aws:route_table:vpc-0:subnet-3-route_table -> aws:internet_gateway:vpc-0:internet_gateway-0:
    aws:route_table:vpc-0:subnet-3-route_table -> aws:vpc:vpc-0:
    aws:availability_zone:region-0:availability_zone-1 -> aws:region:region-0:
    aws:rds_instance:infracopilot-db -> aws:rds_subnet_group:rds_subnet_group-0:
    aws:rds_subnet_group:rds_subnet_group-0 -> aws:subnet:vpc-0:subnet-0:
    aws:rds_subnet_group:rds_subnet_group-0 -> aws:subnet:vpc-0:subnet-1:
    aws:subnet:vpc-0:subnet-0 -> aws:SERVICE_API:subnet-0-ifcp-architecture-storage:
    aws:subnet:vpc-0:subnet-0 -> aws:availability_zone:region-0:availability_zone-0:
    aws:subnet:vpc-0:subnet-0 -> aws:route_table_association:subnet-0-subnet-0-route_table:
    aws:subnet:vpc-0:subnet-0 -> aws:security_group:vpc-0:ecs_service_0-security_group:
    aws:subnet:vpc-0:subnet-0 -> aws:security_group:vpc-0:rds-instance-9-security_group:
    aws:subnet:vpc-0:subnet-0 -> aws:vpc:vpc-0:
    aws:subnet:vpc-0:subnet-1 -> aws:SERVICE_API:subnet-0-ifcp-architecture-storage:
    aws:subnet:vpc-0:subnet-1 -> aws:availability_zone:region-0:availability_zone-1:
    aws:subnet:vpc-0:subnet-1 -> aws:route_table_association:subnet-1-subnet-1-route_table:
    aws:subnet:vpc-0:subnet-1 -> aws:security_group:vpc-0:ecs_service_0-security_group:
    aws:subnet:vpc-0:subnet-1 -> aws:security_group:vpc-0:rds-instance-9-security_group:
    aws:subnet:vpc-0:subnet-1 -> aws:vpc:vpc-0:
    aws:route_table_association:subnet-0-subnet-0-route_table -> aws:route_table:vpc-0:subnet-0-route_table:
    aws:SERVICE_API:subnet-0-ifcp-architecture-storage -> aws:s3_bucket:ifcp-architecture-storage:
    aws:SERVICE_API:subnet-0-ifcp-architecture-storage -> aws:s3_bucket:ifcp-binary-storage:
    aws:SERVICE_API:subnet-0-ifcp-architecture-storage -> aws:secret:ifcp-auth0-client-id:
    aws:SERVICE_API:subnet-0-ifcp-architecture-storage -> aws:secret:ifcp-auth0-secret:
    aws:SERVICE_API:subnet-0-ifcp-architecture-storage -> aws:secret:ifcp-fga-client-id:
    aws:SERVICE_API:subnet-0-ifcp-architecture-storage -> aws:secret:ifcp-fga-model-id:
    aws:SERVICE_API:subnet-0-ifcp-architecture-storage -> aws:secret:ifcp-fga-secret:
    aws:SERVICE_API:subnet-0-ifcp-architecture-storage -> aws:secret:ifcp-fga-store-id:
    aws:route_table_association:subnet-1-subnet-1-route_table -> aws:route_table:vpc-0:subnet-1-route_table:
    aws:security_group:vpc-0:ecs_service_0-security_group -> aws:ecs_service:infracopilot:
    aws:security_group:vpc-0:ecs_service_0-security_group -> aws:vpc:vpc-0:
    aws:security_group:vpc-0:rds-instance-9-security_group -> aws:rds_instance:infracopilot-db:
    aws:security_group:vpc-0:rds-instance-9-security_group -> aws:vpc:vpc-0:
    aws:route_table:vpc-0:subnet-0-route_table -> aws:nat_gateway:subnet-2:subnet-0-route_table-nat_gateway:
    aws:route_table:vpc-0:subnet-0-route_table -> aws:vpc:vpc-0:
    aws:route_table:vpc-0:subnet-1-route_table -> aws:nat_gateway:subnet-3:subnet-1-route_table-nat_gateway:
    aws:route_table:vpc-0:subnet-1-route_table -> aws:vpc:vpc-0:
