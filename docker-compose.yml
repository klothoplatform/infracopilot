version: '3.8'

networks:
  openfga:

services:
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
    volumes:
      - minio_data:/data
    environment:
      - "MINIO_ROOT_USER=minio"
      - "MINIO_ROOT_PASSWORD=minio123"
    command: server /data

  postgres:
    image: postgres:14
    container_name: postgres
    networks:
      - openfga
    ports:
      - "5432:5432"
    volumes:
      - fga_db:/var/lib/postgresql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    depends_on:
      postgres:
        condition: service_healthy
    image: openfga/openfga:latest
    container_name: migrate
    command: migrate
    environment:
      - OPENFGA_DATASTORE_ENGINE=postgres
      - OPENFGA_DATASTORE_URI=postgres://postgres:password@postgres:5432/postgres?sslmode=disable
    networks:
      - openfga

  openfga:
    depends_on:
      migrate:
        condition: service_completed_successfully
    image: openfga/openfga:latest
    container_name: openfga
    environment:
      - OPENFGA_DATASTORE_ENGINE=postgres
      - OPENFGA_DATASTORE_URI=postgres://postgres:password@postgres:5432/postgres?sslmode=disable
      - OPENFGA_LOG_FORMAT=json
    command: run --playground-enabled --playground-port 4000
    networks:
      - openfga
    ports:
      # Needed for the http server
      - "8080:8080"
      # Needed for the grpc server (if used)
      - "8081:8081"
      # Needed for the playground (Do not enable in prod!)
      - "4000:4000"
      
  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint:
      - /bin/sh
      - -ex
      - -c
    command:
      - |
        /usr/bin/mc alias set myminio http://minio:9000 minio minio123
        /usr/bin/mc mb myminio/ifcp-architecture-storage
        /usr/bin/mc anonymous set public myminio/ifcp-architecture-storage
volumes:
  minio_data:
  fga_db:
