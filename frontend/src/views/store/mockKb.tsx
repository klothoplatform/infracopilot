import { ResourceTypeKB } from "../../shared/resources/ResourceTypeKB";

const types = new Map([
  [
    "aws:SERVICE_API",
    {
      provider: "aws",
      type: "SERVICE_API",
      classifications: ["network", "service_endpoint"],
      properties: [],
      displayName: "Service Api",
      views: {},
    },
  ],
  [
    "aws:ami",
    {
      provider: "aws",
      type: "ami",
      classifications: ["machine_image"],
      properties: [],
      displayName: "AMI",
      views: {},
    },
  ],
  [
    "aws:api_deployment",
    {
      provider: "aws",
      type: "api_deployment",
      classifications: null,
      properties: [
        {
          name: "RestApi",
          qualifiedName: "RestApi",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:rest_api"],
        },
        {
          name: "Triggers",
          qualifiedName: "Triggers",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "string",
        },
      ],
      displayName: "API Deployment",
      views: {},
    },
  ],
  [
    "aws:api_integration",
    {
      provider: "aws",
      type: "api_integration",
      classifications: ["api_route", "api_integration"],
      properties: [
        {
          name: "ConnectionType",
          qualifiedName: "ConnectionType",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "IntegrationHttpMethod",
          qualifiedName: "IntegrationHttpMethod",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Method",
          qualifiedName: "Method",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:api_method"],
        },
        {
          name: "RequestParameters",
          qualifiedName: "RequestParameters",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "string",
        },
        {
          name: "Resource",
          qualifiedName: "Resource",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:api_resource"],
        },
        {
          name: "RestApi",
          qualifiedName: "RestApi",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:rest_api"],
        },
        {
          name: "Route",
          qualifiedName: "Route",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Type",
          qualifiedName: "Type",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Uri",
          qualifiedName: "Uri",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "VpcLink",
          qualifiedName: "VpcLink",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:vpc_link"],
        },
      ],
      displayName: "API Integration",
      views: {},
    },
  ],
  [
    "aws:api_method",
    {
      provider: "aws",
      type: "api_method",
      classifications: ["api_route"],
      properties: [
        {
          name: "Authorization",
          qualifiedName: "Authorization",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "HttpMethod",
          qualifiedName: "HttpMethod",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "RequestParameters",
          qualifiedName: "RequestParameters",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "string",
        },
        {
          name: "Resource",
          qualifiedName: "Resource",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:api_resource"],
        },
        {
          name: "RestApi",
          qualifiedName: "RestApi",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:rest_api"],
        },
      ],
      displayName: "API Method",
      views: {},
    },
  ],
  [
    "aws:api_resource",
    {
      provider: "aws",
      type: "api_resource",
      classifications: null,
      properties: [
        {
          name: "FullPath",
          qualifiedName: "FullPath",
          type: "string",
          configurationDisabled: true,
          deployTime: false,
          required: false,
        },
        {
          name: "ParentResource",
          qualifiedName: "ParentResource",
          type: "resource",
          configurationDisabled: true,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:api_resource"],
        },
        {
          name: "PathPart",
          qualifiedName: "PathPart",
          type: "string",
          configurationDisabled: true,
          deployTime: false,
          required: false,
        },
        {
          name: "RestApi",
          qualifiedName: "RestApi",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:rest_api"],
        },
      ],
      displayName: "API Resource",
      views: {},
    },
  ],
  [
    "aws:api_stage",
    {
      provider: "aws",
      type: "api_stage",
      classifications: null,
      properties: [
        {
          name: "Deployment",
          qualifiedName: "Deployment",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:api_deployment"],
        },
        {
          name: "RestApi",
          qualifiedName: "RestApi",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:rest_api"],
        },
        {
          name: "StageInvokeUrl",
          qualifiedName: "StageInvokeUrl",
          type: "string",
          configurationDisabled: true,
          deployTime: true,
          required: false,
        },
        {
          name: "StageName",
          qualifiedName: "StageName",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
      ],
      displayName: "API Stage",
      views: {},
    },
  ],
  [
    "aws:app_runner_service",
    {
      provider: "aws",
      type: "app_runner_service",
      classifications: ["compute", "container", "serverless"],
      properties: [
        {
          name: "EnvironmentVariables",
          qualifiedName: "EnvironmentVariables",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "string",
        },
        {
          name: "Image",
          qualifiedName: "Image",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:ecr_image"],
        },
        {
          name: "InstanceRole",
          qualifiedName: "InstanceRole",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:iam_role"],
        },
      ],
      displayName: "App Runner",
      views: {},
    },
  ],
  [
    "aws:availability_zone",
    {
      provider: "aws",
      type: "availability_zone",
      classifications: null,
      properties: [
        {
          name: "Index",
          qualifiedName: "Index",
          type: "integer",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Region",
          qualifiedName: "Region",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:region"],
        },
      ],
      displayName: "Availability Zone",
      views: {},
    },
  ],
  [
    "aws:cloudfront_distribution",
    {
      provider: "aws",
      type: "cloudfront_distribution",
      classifications: ["cdn", "network"],
      properties: [
        {
          name: "CloudfrontDefaultCertificate",
          qualifiedName: "CloudfrontDefaultCertificate",
          type: "boolean",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "DefaultCacheBehavior",
          qualifiedName: "DefaultCacheBehavior",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "map",
          properties: [
            {
              name: "AllowedMethods",
              qualifiedName: "DefaultCacheBehavior.AllowedMethods",
              type: "list",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              itemType: "string",
            },
            {
              name: "CachedMethods",
              qualifiedName: "DefaultCacheBehavior.CachedMethods",
              type: "list",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              itemType: "string",
            },
            {
              name: "DefaultTtl",
              qualifiedName: "DefaultCacheBehavior.DefaultTtl",
              type: "integer",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "ForwardedValues",
              qualifiedName: "DefaultCacheBehavior.ForwardedValues",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "map",
              properties: [
                {
                  name: "Cookies",
                  qualifiedName: "DefaultCacheBehavior.ForwardedValues.Cookies",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "map",
                  properties: [
                    {
                      name: "Forward",
                      qualifiedName:
                        "DefaultCacheBehavior.ForwardedValues.Cookies.Forward",
                      type: "string",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                    },
                  ],
                },
                {
                  name: "QueryString",
                  qualifiedName:
                    "DefaultCacheBehavior.ForwardedValues.QueryString",
                  type: "boolean",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
              ],
            },
            {
              name: "MaxTtl",
              qualifiedName: "DefaultCacheBehavior.MaxTtl",
              type: "integer",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "MinTtl",
              qualifiedName: "DefaultCacheBehavior.MinTtl",
              type: "integer",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "TargetOriginId",
              qualifiedName: "DefaultCacheBehavior.TargetOriginId",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "ViewerProtocolPolicy",
              qualifiedName: "DefaultCacheBehavior.ViewerProtocolPolicy",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
          ],
        },
        {
          name: "DefaultRootObject",
          qualifiedName: "DefaultRootObject",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Enabled",
          qualifiedName: "Enabled",
          type: "boolean",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Origins",
          qualifiedName: "Origins",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "map",
          properties: [
            {
              name: "CustomOriginConfig",
              qualifiedName: "Origins.CustomOriginConfig",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "map",
              properties: [
                {
                  name: "HttpPort",
                  qualifiedName: "Origins.CustomOriginConfig.HttpPort",
                  type: "integer",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "HttpsPort",
                  qualifiedName: "Origins.CustomOriginConfig.HttpsPort",
                  type: "integer",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "OriginProtocolPolicy",
                  qualifiedName:
                    "Origins.CustomOriginConfig.OriginProtocolPolicy",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "OriginSslProtocols",
                  qualifiedName:
                    "Origins.CustomOriginConfig.OriginSslProtocols",
                  type: "list",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  itemType: "string",
                },
              ],
            },
            {
              name: "DomainName",
              qualifiedName: "Origins.DomainName",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "OriginId",
              qualifiedName: "Origins.OriginId",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "OriginPath",
              qualifiedName: "Origins.OriginPath",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "S3OriginConfig",
              qualifiedName: "Origins.S3OriginConfig",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "map",
              properties: [
                {
                  name: "OriginAccessIdentity",
                  qualifiedName: "Origins.S3OriginConfig.OriginAccessIdentity",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
              ],
            },
          ],
        },
        {
          name: "Restrictions",
          qualifiedName: "Restrictions",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "map",
          properties: [
            {
              name: "GeoRestriction",
              qualifiedName: "Restrictions.GeoRestriction",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "map",
              properties: [
                {
                  name: "RestrictionType",
                  qualifiedName: "Restrictions.GeoRestriction.RestrictionType",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
              ],
            },
          ],
        },
      ],
      displayName: "CloudFront Distribution",
      views: {},
    },
  ],
  [
    "aws:cloudfront_origin_access_identity",
    {
      provider: "aws",
      type: "cloudfront_origin_access_identity",
      classifications: null,
      properties: [
        {
          name: "CloudfrontAccessIdentityPath",
          qualifiedName: "CloudfrontAccessIdentityPath",
          type: "string",
          configurationDisabled: true,
          deployTime: true,
          required: false,
        },
        {
          name: "Comment",
          qualifiedName: "Comment",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "IamArn",
          qualifiedName: "IamArn",
          type: "string",
          configurationDisabled: true,
          deployTime: true,
          required: false,
        },
      ],
      displayName: "CloudFront Origin Access Identity",
      views: {},
    },
  ],
  [
    "aws:dynamodb_table",
    {
      provider: "aws",
      type: "dynamodb_table",
      classifications: [
        "storage",
        "nosql",
        "dynamodb",
        "serverless",
        "kv",
        "high-availability",
        "scalable",
      ],
      properties: [
        {
          name: "Arn",
          qualifiedName: "Arn",
          type: "string",
          configurationDisabled: true,
          deployTime: true,
          required: false,
        },
        {
          name: "Attributes",
          qualifiedName: "Attributes",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: true,
          itemType: "map",
          properties: [
            {
              name: "Name",
              qualifiedName: "Attributes.Name",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "Type",
              qualifiedName: "Attributes.Type",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
          ],
        },
        {
          name: "BillingMode",
          qualifiedName: "BillingMode",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "DynamoTableBackupArn",
          qualifiedName: "DynamoTableBackupArn",
          type: "string",
          configurationDisabled: true,
          deployTime: true,
          required: false,
        },
        {
          name: "DynamoTableExportArn",
          qualifiedName: "DynamoTableExportArn",
          type: "string",
          configurationDisabled: true,
          deployTime: true,
          required: false,
        },
        {
          name: "DynamoTableIndexArn",
          qualifiedName: "DynamoTableIndexArn",
          type: "string",
          configurationDisabled: true,
          deployTime: true,
          required: false,
        },
        {
          name: "DynamoTableStreamArn",
          qualifiedName: "DynamoTableStreamArn",
          type: "string",
          configurationDisabled: true,
          deployTime: true,
          required: false,
        },
        {
          name: "HashKey",
          qualifiedName: "HashKey",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: true,
        },
        {
          name: "RangeKey",
          qualifiedName: "RangeKey",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "TableName",
          qualifiedName: "TableName",
          type: "string",
          configurationDisabled: true,
          deployTime: true,
          required: false,
        },
      ],
      displayName: "DynamoDB Table",
      views: {},
    },
  ],
  [
    "aws:ec2_instance",
    {
      provider: "aws",
      type: "ec2_instance",
      classifications: ["compute", "long_running", "server", "linux"],
      properties: [
        {
          name: "AMI",
          qualifiedName: "AMI",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:ami"],
        },
        {
          name: "Id",
          qualifiedName: "Id",
          type: "string",
          configurationDisabled: true,
          deployTime: true,
          required: false,
        },
        {
          name: "InstanceProfile",
          qualifiedName: "InstanceProfile",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:iam_instance_profile"],
        },
        {
          name: "InstanceType",
          qualifiedName: "InstanceType",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "SecurityGroup",
          qualifiedName: "SecurityGroup",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "resource",
          resourceTypes: ["aws:security_group"],
        },
        {
          name: "Subnet",
          qualifiedName: "Subnet",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:subnet"],
        },
      ],
      displayName: "EC2 Instance",
      views: {},
    },
  ],
  [
    "aws:ecr_image",
    {
      provider: "aws",
      type: "ecr_image",
      classifications: ["image", "container"],
      properties: [
        {
          name: "BaseImage",
          qualifiedName: "BaseImage",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Context",
          qualifiedName: "Context",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Dockerfile",
          qualifiedName: "Dockerfile",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "ImageName",
          qualifiedName: "ImageName",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Repo",
          qualifiedName: "Repo",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:ecr_repo"],
        },
        {
          name: "Tag",
          qualifiedName: "Tag",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
      ],
      displayName: "ECR Image",
      views: {},
    },
  ],
  [
    "aws:ecr_repo",
    {
      provider: "aws",
      type: "ecr_repo",
      classifications: ["repository"],
      properties: [
        {
          name: "ForceDelete",
          qualifiedName: "ForceDelete",
          type: "boolean",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
      ],
      displayName: "ECR Repository",
      views: {},
    },
  ],
  [
    "aws:ecs_cluster",
    {
      provider: "aws",
      type: "ecs_cluster",
      classifications: ["cluster"],
      properties: [],
      displayName: "ECS Cluster",
      views: {},
    },
  ],
  [
    "aws:ecs_service",
    {
      provider: "aws",
      type: "ecs_service",
      classifications: ["compute", "container", "long_running"],
      properties: [
        {
          name: "AssignPublicIp",
          qualifiedName: "AssignPublicIp",
          type: "boolean",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Cluster",
          qualifiedName: "Cluster",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:ecs_cluster"],
        },
        {
          name: "DeploymentCircuitBreaker",
          qualifiedName: "DeploymentCircuitBreaker",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "map",
          properties: [
            {
              name: "Enable",
              qualifiedName: "DeploymentCircuitBreaker.Enable",
              type: "boolean",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "Rollback",
              qualifiedName: "DeploymentCircuitBreaker.Rollback",
              type: "boolean",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
          ],
        },
        {
          name: "DesiredCount",
          qualifiedName: "DesiredCount",
          type: "integer",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "ForceNewDeployment",
          qualifiedName: "ForceNewDeployment",
          type: "boolean",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "LaunchType",
          qualifiedName: "LaunchType",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "LoadBalancers",
          qualifiedName: "LoadBalancers",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "map",
          properties: [
            {
              name: "ContainerName",
              qualifiedName: "LoadBalancers.ContainerName",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "ContainerPort",
              qualifiedName: "LoadBalancers.ContainerPort",
              type: "integer",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "TargetGroup",
              qualifiedName: "LoadBalancers.TargetGroup",
              type: "resource",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              resourceTypes: ["aws:target_group"],
            },
          ],
        },
        {
          name: "SecurityGroups",
          qualifiedName: "SecurityGroups",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "resource",
          resourceTypes: ["aws:security_group"],
        },
        {
          name: "Subnets",
          qualifiedName: "Subnets",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "resource",
          resourceTypes: ["aws:subnet"],
        },
        {
          name: "TaskDefinition",
          qualifiedName: "TaskDefinition",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:ecs_task_definition"],
        },
      ],
      displayName: "ECS Service",
      views: {},
    },
  ],
  [
    "aws:ecs_task_definition",
    {
      provider: "aws",
      type: "ecs_task_definition",
      classifications: null,
      properties: [
        {
          name: "Cpu",
          qualifiedName: "Cpu",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "EfsVolumes",
          qualifiedName: "EfsVolumes",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "map",
          properties: [
            {
              name: "AuthorizationConfig",
              qualifiedName: "EfsVolumes.AuthorizationConfig",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "map",
              properties: [
                {
                  name: "AccessPoint",
                  qualifiedName: "EfsVolumes.AuthorizationConfig.AccessPoint",
                  type: "resource",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  resourceTypes: ["aws:efs_access_point"],
                },
                {
                  name: "Iam",
                  qualifiedName: "EfsVolumes.AuthorizationConfig.Iam",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
              ],
            },
            {
              name: "FileSystem",
              qualifiedName: "EfsVolumes.FileSystem",
              type: "resource",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              resourceTypes: ["aws:efs_file_system"],
            },
            {
              name: "RootDirectory",
              qualifiedName: "EfsVolumes.RootDirectory",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "TransitEncryption",
              qualifiedName: "EfsVolumes.TransitEncryption",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "TransitEncryptionPort",
              qualifiedName: "EfsVolumes.TransitEncryptionPort",
              type: "integer",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
          ],
        },
        {
          name: "EnvironmentVariables",
          qualifiedName: "EnvironmentVariables",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "string",
        },
        {
          name: "ExecutionRole",
          qualifiedName: "ExecutionRole",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:iam_role"],
        },
        {
          name: "Image",
          qualifiedName: "Image",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:ecr_image"],
        },
        {
          name: "LogGroup",
          qualifiedName: "LogGroup",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:log_group"],
        },
        {
          name: "Memory",
          qualifiedName: "Memory",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "NetworkMode",
          qualifiedName: "NetworkMode",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "PortMappings",
          qualifiedName: "PortMappings",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "map",
          properties: [
            {
              name: "ContainerPort",
              qualifiedName: "PortMappings.ContainerPort",
              type: "integer",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "HostPort",
              qualifiedName: "PortMappings.HostPort",
              type: "integer",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "Protocol",
              qualifiedName: "PortMappings.Protocol",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
          ],
        },
        {
          name: "Region",
          qualifiedName: "Region",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:region"],
        },
        {
          name: "RequiresCompatibilities",
          qualifiedName: "RequiresCompatibilities",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "string",
        },
      ],
      displayName: "ECS Task Definition",
      views: {},
    },
  ],
  [
    "aws:efs_access_point",
    {
      provider: "aws",
      type: "efs_access_point",
      classifications: ["efs_access"],
      properties: [
        {
          name: "FileSystem",
          qualifiedName: "FileSystem",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:efs_file_system"],
        },
        {
          name: "PosixUser",
          qualifiedName: "PosixUser",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "map",
          properties: [
            {
              name: "Gid",
              qualifiedName: "PosixUser.Gid",
              type: "integer",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "Uid",
              qualifiedName: "PosixUser.Uid",
              type: "integer",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
          ],
        },
        {
          name: "RootDirectory",
          qualifiedName: "RootDirectory",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "map",
          properties: [
            {
              name: "CreationInfo",
              qualifiedName: "RootDirectory.CreationInfo",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "map",
              properties: [
                {
                  name: "OwnerGid",
                  qualifiedName: "RootDirectory.CreationInfo.OwnerGid",
                  type: "integer",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "OwnerUid",
                  qualifiedName: "RootDirectory.CreationInfo.OwnerUid",
                  type: "integer",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "Permissions",
                  qualifiedName: "RootDirectory.CreationInfo.Permissions",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
              ],
            },
            {
              name: "Path",
              qualifiedName: "RootDirectory.Path",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
          ],
        },
      ],
      displayName: "EFS Access Point",
      views: {},
    },
  ],
  [
    "aws:efs_file_system",
    {
      provider: "aws",
      type: "efs_file_system",
      classifications: ["file_system", "scalable", "elastic", "storage"],
      properties: [
        {
          name: "AvailabilityZone",
          qualifiedName: "AvailabilityZone",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:availability_zone"],
        },
        {
          name: "CreationToken",
          qualifiedName: "CreationToken",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Encrypted",
          qualifiedName: "Encrypted",
          type: "boolean",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "KmsKey",
          qualifiedName: "KmsKey",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:kms_key"],
        },
        {
          name: "LifecyclePolicies",
          qualifiedName: "LifecyclePolicies",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "map",
          properties: [
            {
              name: "TransitionToIA",
              qualifiedName: "LifecyclePolicies.TransitionToIA",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "TransitionToPrimaryStorageClass",
              qualifiedName:
                "LifecyclePolicies.TransitionToPrimaryStorageClass",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
          ],
        },
        {
          name: "PerformanceMode",
          qualifiedName: "PerformanceMode",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "ProvisionedThroughputInMibps",
          qualifiedName: "ProvisionedThroughputInMibps",
          type: "integer",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "ThroughputMode",
          qualifiedName: "ThroughputMode",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
      ],
      displayName: "EFS File System",
      views: {},
    },
  ],
  [
    "aws:efs_mount_target",
    {
      provider: "aws",
      type: "efs_mount_target",
      classifications: ["efs_access", "network", "network#Subnet"],
      properties: [
        {
          name: "FileSystem",
          qualifiedName: "FileSystem",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:efs_file_system"],
        },
        {
          name: "IpAddress",
          qualifiedName: "IpAddress",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "SecurityGroups",
          qualifiedName: "SecurityGroups",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "resource",
          resourceTypes: ["aws:security_group"],
        },
        {
          name: "Subnet",
          qualifiedName: "Subnet",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:subnet"],
        },
      ],
      displayName: "EFS Mount Target",
      views: {},
    },
  ],
  [
    "aws:eks_add_on",
    {
      provider: "aws",
      type: "eks_add_on",
      classifications: null,
      properties: [
        {
          name: "AddOnName",
          qualifiedName: "AddOnName",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Cluster",
          qualifiedName: "Cluster",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:eks_cluster"],
        },
        {
          name: "Role",
          qualifiedName: "Role",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:iam_role"],
        },
      ],
      displayName: "EKS AddOn",
      views: {},
    },
  ],
  [
    "aws:eks_cluster",
    {
      provider: "aws",
      type: "eks_cluster",
      classifications: ["cluster", "kubernetes"],
      properties: [
        {
          name: "ClusterRole",
          qualifiedName: "ClusterRole",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:iam_role"],
        },
        {
          name: "KubeConfig",
          qualifiedName: "KubeConfig",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "map",
          properties: [
            {
              name: "ApiVersion",
              qualifiedName: "KubeConfig.ApiVersion",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "Clusters",
              qualifiedName: "KubeConfig.Clusters",
              type: "list",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              itemType: "map",
              properties: [
                {
                  name: "Cluster",
                  qualifiedName: "KubeConfig.Clusters.Cluster",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "Name",
                  qualifiedName: "KubeConfig.Clusters.Name",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
              ],
            },
            {
              name: "Contexts",
              qualifiedName: "KubeConfig.Contexts",
              type: "list",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              itemType: "map",
              properties: [
                {
                  name: "Context",
                  qualifiedName: "KubeConfig.Contexts.Context",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "map",
                  properties: [
                    {
                      name: "Cluster",
                      qualifiedName: "KubeConfig.Contexts.Context.Cluster",
                      type: "string",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                    },
                    {
                      name: "User",
                      qualifiedName: "KubeConfig.Contexts.Context.User",
                      type: "string",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                    },
                  ],
                },
                {
                  name: "Name",
                  qualifiedName: "KubeConfig.Contexts.Name",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
              ],
            },
            {
              name: "CurrentContext",
              qualifiedName: "KubeConfig.CurrentContext",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "Kind",
              qualifiedName: "KubeConfig.Kind",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "Name",
              qualifiedName: "KubeConfig.Name",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "Users",
              qualifiedName: "KubeConfig.Users",
              type: "list",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              itemType: "map",
              properties: [
                {
                  name: "Name",
                  qualifiedName: "KubeConfig.Users.Name",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "User",
                  qualifiedName: "KubeConfig.Users.User",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "map",
                  properties: [
                    {
                      name: "Exec",
                      qualifiedName: "KubeConfig.Users.User.Exec",
                      type: "map",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      keyType: "string",
                      valueType: "map",
                      properties: [
                        {
                          name: "ApiVersion",
                          qualifiedName:
                            "KubeConfig.Users.User.Exec.ApiVersion",
                          type: "string",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                        },
                        {
                          name: "Args",
                          qualifiedName: "KubeConfig.Users.User.Exec.Args",
                          type: "list",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                          itemType: "string",
                        },
                        {
                          name: "Command",
                          qualifiedName: "KubeConfig.Users.User.Exec.Command",
                          type: "string",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
        {
          name: "SecurityGroups",
          qualifiedName: "SecurityGroups",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "resource",
          resourceTypes: ["aws:security_group"],
        },
        {
          name: "Subnets",
          qualifiedName: "Subnets",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "resource",
          resourceTypes: ["aws:subnet"],
        },
        {
          name: "Vpc",
          qualifiedName: "Vpc",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:vpc"],
        },
      ],
      displayName: "EKS Cluster",
      views: {},
    },
  ],
  [
    "aws:eks_fargate_profile",
    {
      provider: "aws",
      type: "eks_fargate_profile",
      classifications: null,
      properties: [
        {
          name: "Cluster",
          qualifiedName: "Cluster",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:eks_cluster"],
        },
        {
          name: "PodExecutionRole",
          qualifiedName: "PodExecutionRole",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:iam_role"],
        },
        {
          name: "Selectors",
          qualifiedName: "Selectors",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "map",
          properties: [
            {
              name: "Labels",
              qualifiedName: "Selectors.Labels",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "string",
            },
            {
              name: "Namespace",
              qualifiedName: "Selectors.Namespace",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
          ],
        },
        {
          name: "Subnets",
          qualifiedName: "Subnets",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "resource",
          resourceTypes: ["aws:subnet"],
        },
      ],
      displayName: "EKS Fargate Profile",
      views: {},
    },
  ],
  [
    "aws:eks_node_group",
    {
      provider: "aws",
      type: "eks_node_group",
      classifications: null,
      properties: [
        {
          name: "AmiType",
          qualifiedName: "AmiType",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Cluster",
          qualifiedName: "Cluster",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:eks_cluster"],
        },
        {
          name: "DesiredSize",
          qualifiedName: "DesiredSize",
          type: "integer",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "DiskSize",
          qualifiedName: "DiskSize",
          type: "integer",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "InstanceTypes",
          qualifiedName: "InstanceTypes",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "string",
        },
        {
          name: "Labels",
          qualifiedName: "Labels",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "string",
        },
        {
          name: "MaxSize",
          qualifiedName: "MaxSize",
          type: "integer",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "MaxUnavailable",
          qualifiedName: "MaxUnavailable",
          type: "integer",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "MinSize",
          qualifiedName: "MinSize",
          type: "integer",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "NodeRole",
          qualifiedName: "NodeRole",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:iam_role"],
        },
        {
          name: "Subnets",
          qualifiedName: "Subnets",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "resource",
          resourceTypes: ["aws:subnet"],
        },
      ],
      displayName: "EKS Node Group",
      views: {},
    },
  ],
  [
    "aws:elastic_ip",
    {
      provider: "aws",
      type: "elastic_ip",
      classifications: ["static_ip_address"],
      properties: [],
      displayName: "Elastic IP",
      views: {},
    },
  ],
  [
    "aws:elasticache_cluster",
    {
      provider: "aws",
      type: "elasticache_cluster",
      classifications: ["storage", "redis", "cache", "memcached"],
      properties: [
        {
          name: "CloudwatchGroup",
          qualifiedName: "CloudwatchGroup",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:log_group"],
        },
        {
          name: "Engine",
          qualifiedName: "Engine",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "NodeType",
          qualifiedName: "NodeType",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "NumCacheNodes",
          qualifiedName: "NumCacheNodes",
          type: "integer",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "SecurityGroups",
          qualifiedName: "SecurityGroups",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "resource",
          resourceTypes: ["aws:security_group"],
        },
        {
          name: "SubnetGroup",
          qualifiedName: "SubnetGroup",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:elasticache_subnet_group"],
        },
      ],
      displayName: "ElastiCache Cluster",
      views: {},
    },
  ],
  [
    "aws:elasticache_subnet_group",
    {
      provider: "aws",
      type: "elasticache_subnet_group",
      classifications: null,
      properties: [
        {
          name: "Subnets",
          qualifiedName: "Subnets",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "resource",
          resourceTypes: ["aws:subnet"],
        },
      ],
      displayName: "ElastiCache Subnet Group",
      views: {},
    },
  ],
  [
    "aws:iam_instance_profile",
    {
      provider: "aws",
      type: "iam_instance_profile",
      classifications: null,
      properties: [
        {
          name: "Role",
          qualifiedName: "Role",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:iam_role"],
        },
      ],
      displayName: "IAM Instance Profile",
      views: {},
    },
  ],
  [
    "aws:iam_oidc_provider",
    {
      provider: "aws",
      type: "iam_oidc_provider",
      classifications: ["authorization"],
      properties: [
        {
          name: "ClientIdLists",
          qualifiedName: "ClientIdLists",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "string",
        },
        {
          name: "Cluster",
          qualifiedName: "Cluster",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:eks_cluster"],
        },
        {
          name: "Region",
          qualifiedName: "Region",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:region"],
        },
      ],
      displayName: "IAM OIDC Provider",
      views: {},
    },
  ],
  [
    "aws:iam_policy",
    {
      provider: "aws",
      type: "iam_policy",
      classifications: ["policy", "security"],
      properties: [
        {
          name: "Arn",
          qualifiedName: "Arn",
          type: "string",
          configurationDisabled: true,
          deployTime: true,
          required: false,
        },
        {
          name: "Policy",
          qualifiedName: "Policy",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "map",
          properties: [
            {
              name: "Statement",
              qualifiedName: "Policy.Statement",
              type: "list",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              itemType: "map",
              properties: [
                {
                  name: "Action",
                  qualifiedName: "Policy.Statement.Action",
                  type: "list",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  itemType: "string",
                },
                {
                  name: "Condition",
                  qualifiedName: "Policy.Statement.Condition",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "map",
                  properties: [
                    {
                      name: "StringEquals",
                      qualifiedName: "Policy.Statement.Condition.StringEquals",
                      type: "map",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      keyType: "string",
                      valueType: "string",
                    },
                    {
                      name: "StringLike",
                      qualifiedName: "Policy.Statement.Condition.StringLike",
                      type: "map",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      keyType: "string",
                      valueType: "string",
                    },
                  ],
                },
                {
                  name: "Effect",
                  qualifiedName: "Policy.Statement.Effect",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "Principal",
                  qualifiedName: "Policy.Statement.Principal",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "map",
                  properties: [
                    {
                      name: "AWS",
                      qualifiedName: "Policy.Statement.Principal.AWS",
                      type: "list",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      itemType: "string",
                    },
                    {
                      name: "Federated",
                      qualifiedName: "Policy.Statement.Principal.Federated",
                      type: "list",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      itemType: "string",
                    },
                    {
                      name: "Service",
                      qualifiedName: "Policy.Statement.Principal.Service",
                      type: "list",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      itemType: "string",
                    },
                  ],
                },
                {
                  name: "Resource",
                  qualifiedName: "Policy.Statement.Resource",
                  type: "list",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  itemType: "string",
                },
              ],
            },
            {
              name: "Version",
              qualifiedName: "Policy.Version",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
          ],
        },
      ],
      displayName: "IAM Policy",
      views: {},
    },
  ],
  [
    "aws:iam_role",
    {
      provider: "aws",
      type: "iam_role",
      classifications: ["role", "permissions"],
      properties: [
        {
          name: "AssumeRolePolicyDoc",
          qualifiedName: "AssumeRolePolicyDoc",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "map",
          properties: [
            {
              name: "Statement",
              qualifiedName: "AssumeRolePolicyDoc.Statement",
              type: "list",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              itemType: "map",
              properties: [
                {
                  name: "Action",
                  qualifiedName: "AssumeRolePolicyDoc.Statement.Action",
                  type: "list",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  itemType: "string",
                },
                {
                  name: "Condition",
                  qualifiedName: "AssumeRolePolicyDoc.Statement.Condition",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "map",
                  properties: [
                    {
                      name: "StringEquals",
                      qualifiedName:
                        "AssumeRolePolicyDoc.Statement.Condition.StringEquals",
                      type: "map",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      keyType: "string",
                      valueType: "string",
                    },
                    {
                      name: "StringLike",
                      qualifiedName:
                        "AssumeRolePolicyDoc.Statement.Condition.StringLike",
                      type: "map",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      keyType: "string",
                      valueType: "string",
                    },
                  ],
                },
                {
                  name: "Effect",
                  qualifiedName: "AssumeRolePolicyDoc.Statement.Effect",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "Principal",
                  qualifiedName: "AssumeRolePolicyDoc.Statement.Principal",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "map",
                  properties: [
                    {
                      name: "AWS",
                      qualifiedName:
                        "AssumeRolePolicyDoc.Statement.Principal.AWS",
                      type: "list",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      itemType: "string",
                    },
                    {
                      name: "Federated",
                      qualifiedName:
                        "AssumeRolePolicyDoc.Statement.Principal.Federated",
                      type: "list",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      itemType: "string",
                    },
                    {
                      name: "Service",
                      qualifiedName:
                        "AssumeRolePolicyDoc.Statement.Principal.Service",
                      type: "list",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      itemType: "string",
                    },
                  ],
                },
                {
                  name: "Resource",
                  qualifiedName: "AssumeRolePolicyDoc.Statement.Resource",
                  type: "list",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  itemType: "string",
                },
              ],
            },
            {
              name: "Version",
              qualifiedName: "AssumeRolePolicyDoc.Version",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
          ],
        },
        {
          name: "InlinePolicies",
          qualifiedName: "InlinePolicies",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "map",
          properties: [
            {
              name: "Name",
              qualifiedName: "InlinePolicies.Name",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "Policy",
              qualifiedName: "InlinePolicies.Policy",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "map",
              properties: [
                {
                  name: "Statement",
                  qualifiedName: "InlinePolicies.Policy.Statement",
                  type: "list",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  itemType: "map",
                  properties: [
                    {
                      name: "Action",
                      qualifiedName: "InlinePolicies.Policy.Statement.Action",
                      type: "list",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      itemType: "string",
                    },
                    {
                      name: "Condition",
                      qualifiedName:
                        "InlinePolicies.Policy.Statement.Condition",
                      type: "map",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      keyType: "string",
                      valueType: "map",
                      properties: [
                        {
                          name: "StringEquals",
                          qualifiedName:
                            "InlinePolicies.Policy.Statement.Condition.StringEquals",
                          type: "map",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                          keyType: "string",
                          valueType: "string",
                        },
                        {
                          name: "StringLike",
                          qualifiedName:
                            "InlinePolicies.Policy.Statement.Condition.StringLike",
                          type: "map",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                          keyType: "string",
                          valueType: "string",
                        },
                      ],
                    },
                    {
                      name: "Effect",
                      qualifiedName: "InlinePolicies.Policy.Statement.Effect",
                      type: "string",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                    },
                    {
                      name: "Principal",
                      qualifiedName:
                        "InlinePolicies.Policy.Statement.Principal",
                      type: "map",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      keyType: "string",
                      valueType: "map",
                      properties: [
                        {
                          name: "AWS",
                          qualifiedName:
                            "InlinePolicies.Policy.Statement.Principal.AWS",
                          type: "list",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                          itemType: "string",
                        },
                        {
                          name: "Federated",
                          qualifiedName:
                            "InlinePolicies.Policy.Statement.Principal.Federated",
                          type: "list",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                          itemType: "string",
                        },
                        {
                          name: "Service",
                          qualifiedName:
                            "InlinePolicies.Policy.Statement.Principal.Service",
                          type: "list",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                          itemType: "string",
                        },
                      ],
                    },
                    {
                      name: "Resource",
                      qualifiedName: "InlinePolicies.Policy.Statement.Resource",
                      type: "list",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      itemType: "string",
                    },
                  ],
                },
                {
                  name: "Version",
                  qualifiedName: "InlinePolicies.Policy.Version",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
              ],
            },
          ],
        },
        {
          name: "ManagedPolicies",
          qualifiedName: "ManagedPolicies",
          type: "set",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "string",
        },
      ],
      displayName: "IAM Role",
      views: {},
    },
  ],
  [
    "aws:iam_role_policy_attachment",
    {
      provider: "aws",
      type: "iam_role_policy_attachment",
      classifications: null,
      properties: [
        {
          name: "Policy",
          qualifiedName: "Policy",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: true,
        },
        {
          name: "Role",
          qualifiedName: "Role",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: true,
        },
      ],
      displayName: "IAM Role Policy Attachment",
      views: {},
    },
  ],
  [
    "aws:internet_gateway",
    {
      provider: "aws",
      type: "internet_gateway",
      classifications: null,
      properties: [
        {
          name: "Vpc",
          qualifiedName: "Vpc",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: true,
          resourceTypes: ["aws:vpc"],
        },
      ],
      displayName: "Internet Gateway",
      views: {},
    },
  ],
  [
    "aws:lambda_event_source_mapping",
    {
      provider: "aws",
      type: "lambda_event_source_mapping",
      classifications: null,
      properties: [
        {
          name: "BatchSize",
          qualifiedName: "BatchSize",
          type: "integer",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Enabled",
          qualifiedName: "Enabled",
          type: "boolean",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "EventSource",
          qualifiedName: "EventSource",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: [],
        },
        {
          name: "FilterCriteria",
          qualifiedName: "FilterCriteria",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "map",
          properties: [
            {
              name: "pattern",
              qualifiedName: "FilterCriteria.pattern",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
          ],
        },
        {
          name: "Function",
          qualifiedName: "Function",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:lambda_function"],
        },
        {
          name: "FunctionResponseTypes",
          qualifiedName: "FunctionResponseTypes",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "string",
        },
        {
          name: "MaximumBatchingWindowInSeconds",
          qualifiedName: "MaximumBatchingWindowInSeconds",
          type: "integer",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "ScalingConfig",
          qualifiedName: "ScalingConfig",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "map",
          properties: [
            {
              name: "MaximumConcurrency",
              qualifiedName: "ScalingConfig.MaximumConcurrency",
              type: "integer",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
          ],
        },
      ],
      displayName: "Lambda Event Source Mapping",
      views: {},
    },
  ],
  [
    "aws:lambda_function",
    {
      provider: "aws",
      type: "lambda_function",
      classifications: ["serverless", "compute"],
      properties: [
        {
          name: "Arn",
          qualifiedName: "Arn",
          type: "string",
          configurationDisabled: true,
          deployTime: true,
          required: false,
        },
        {
          name: "EfsAccessPoint",
          qualifiedName: "EfsAccessPoint",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:efs_access_point"],
        },
        {
          name: "EnvironmentVariables",
          qualifiedName: "EnvironmentVariables",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "string",
        },
        {
          name: "ExecutionRole",
          qualifiedName: "ExecutionRole",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:iam_role"],
        },
        {
          name: "Image",
          qualifiedName: "Image",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:ecr_image"],
        },
        {
          name: "LambdaIntegrationUri",
          qualifiedName: "LambdaIntegrationUri",
          type: "string",
          configurationDisabled: true,
          deployTime: true,
          required: false,
        },
        {
          name: "LogGroup",
          qualifiedName: "LogGroup",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:log_group"],
        },
        {
          name: "MemorySize",
          qualifiedName: "MemorySize",
          type: "integer",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "SecurityGroups",
          qualifiedName: "SecurityGroups",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "resource",
          resourceTypes: ["aws:security_group"],
        },
        {
          name: "Subnets",
          qualifiedName: "Subnets",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "resource",
          resourceTypes: ["aws:subnet"],
        },
        {
          name: "Timeout",
          qualifiedName: "Timeout",
          type: "integer",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
      ],
      displayName: "Lambda Function",
      views: {},
    },
  ],
  [
    "aws:lambda_permission",
    {
      provider: "aws",
      type: "lambda_permission",
      classifications: ["permissions"],
      properties: [
        {
          name: "Action",
          qualifiedName: "Action",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Function",
          qualifiedName: "Function",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: [],
        },
        {
          name: "Principal",
          qualifiedName: "Principal",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Source",
          qualifiedName: "Source",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
      ],
      displayName: "Lambda Permission",
      views: {},
    },
  ],
  [
    "aws:load_balancer",
    {
      provider: "aws",
      type: "load_balancer",
      classifications: ["load_balancer", "scalable", "reliable"],
      properties: [
        {
          name: "IpAddressType",
          qualifiedName: "IpAddressType",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "LoadBalancerAttributes",
          qualifiedName: "LoadBalancerAttributes",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "string",
        },
        {
          name: "NlbUri",
          qualifiedName: "NlbUri",
          type: "string",
          configurationDisabled: true,
          deployTime: true,
          required: false,
        },
        {
          name: "Scheme",
          qualifiedName: "Scheme",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "SecurityGroups",
          qualifiedName: "SecurityGroups",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "resource",
          resourceTypes: ["aws:security_group"],
        },
        {
          name: "Subnets",
          qualifiedName: "Subnets",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "resource",
          resourceTypes: ["aws:subnet"],
        },
        {
          name: "Tags",
          qualifiedName: "Tags",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "string",
        },
        {
          name: "Type",
          qualifiedName: "Type",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
      ],
      displayName: "Load Balancer",
      views: {},
    },
  ],
  [
    "aws:load_balancer_listener",
    {
      provider: "aws",
      type: "load_balancer_listener",
      classifications: null,
      properties: [
        {
          name: "DefaultActions",
          qualifiedName: "DefaultActions",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "map",
          properties: [
            {
              name: "TargetGroup",
              qualifiedName: "DefaultActions.TargetGroup",
              type: "resource",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              resourceTypes: ["aws:target_group"],
            },
            {
              name: "Type",
              qualifiedName: "DefaultActions.Type",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
          ],
        },
        {
          name: "LoadBalancer",
          qualifiedName: "LoadBalancer",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:load_balancer"],
        },
        {
          name: "Port",
          qualifiedName: "Port",
          type: "integer",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Protocol",
          qualifiedName: "Protocol",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
      ],
      displayName: "Load Balancer Listener",
      views: {},
    },
  ],
  [
    "aws:log_group",
    {
      provider: "aws",
      type: "log_group",
      classifications: ["logs", "monitoring"],
      properties: [
        {
          name: "Arn",
          qualifiedName: "Arn",
          type: "string",
          configurationDisabled: true,
          deployTime: true,
          required: false,
        },
        {
          name: "LogGroupName",
          qualifiedName: "LogGroupName",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "RetentionInDays",
          qualifiedName: "RetentionInDays",
          type: "integer",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
      ],
      displayName: "CloudWatch Log Group",
      views: {},
    },
  ],
  [
    "aws:nat_gateway",
    {
      provider: "aws",
      type: "nat_gateway",
      classifications: null,
      properties: [
        {
          name: "ElasticIp",
          qualifiedName: "ElasticIp",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: true,
          resourceTypes: ["aws:elastic_ip"],
        },
        {
          name: "Subnet",
          qualifiedName: "Subnet",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: true,
          resourceTypes: ["aws:subnet"],
        },
      ],
      displayName: "NAT Gateway",
      views: {},
    },
  ],
  [
    "aws:private_dns_namespace",
    {
      provider: "aws",
      type: "private_dns_namespace",
      classifications: ["service_discovery"],
      properties: [
        {
          name: "Vpc",
          qualifiedName: "Vpc",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:vpc"],
        },
      ],
      displayName: "Private DNS Namespace",
      views: {},
    },
  ],
  [
    "aws:rds_instance",
    {
      provider: "aws",
      type: "rds_instance",
      classifications: ["storage", "sql", "database", "relational"],
      properties: [
        {
          name: "AllocatedStorage",
          qualifiedName: "AllocatedStorage",
          type: "integer",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "CredentialsSecretValue",
          qualifiedName: "CredentialsSecretValue",
          type: "string",
          configurationDisabled: true,
          deployTime: true,
          required: false,
        },
        {
          name: "DatabaseName",
          qualifiedName: "DatabaseName",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Engine",
          qualifiedName: "Engine",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "EngineVersion",
          qualifiedName: "EngineVersion",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "IamDatabaseAuthenticationEnabled",
          qualifiedName: "IamDatabaseAuthenticationEnabled",
          type: "boolean",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "InstanceClass",
          qualifiedName: "InstanceClass",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Password",
          qualifiedName: "Password",
          type: "string",
          configurationDisabled: true,
          deployTime: false,
          required: false,
        },
        {
          name: "RdsConnectionArn",
          qualifiedName: "RdsConnectionArn",
          type: "string",
          configurationDisabled: true,
          deployTime: true,
          required: false,
        },
        {
          name: "SecurityGroups",
          qualifiedName: "SecurityGroups",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "resource",
          resourceTypes: ["aws:security_group"],
        },
        {
          name: "SkipFinalSnapshot",
          qualifiedName: "SkipFinalSnapshot",
          type: "boolean",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "SubnetGroup",
          qualifiedName: "SubnetGroup",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:rds_subnet_group"],
        },
        {
          name: "Username",
          qualifiedName: "Username",
          type: "string",
          configurationDisabled: true,
          deployTime: false,
          required: false,
        },
      ],
      displayName: "RDS Instance",
      views: {},
    },
  ],
  [
    "aws:rds_proxy",
    {
      provider: "aws",
      type: "rds_proxy",
      classifications: ["proxy", "storage"],
      properties: [
        {
          name: "Auths",
          qualifiedName: "Auths",
          type: "set",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "map",
          properties: [
            {
              name: "AuthScheme",
              qualifiedName: "Auths.AuthScheme",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "IamAuth",
              qualifiedName: "Auths.IamAuth",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "Secret",
              qualifiedName: "Auths.Secret",
              type: "resource",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              resourceTypes: ["aws:secret"],
            },
          ],
        },
        {
          name: "DebugLogging",
          qualifiedName: "DebugLogging",
          type: "boolean",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "EngineFamily",
          qualifiedName: "EngineFamily",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "IdleClientTimeout",
          qualifiedName: "IdleClientTimeout",
          type: "integer",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "RequireTls",
          qualifiedName: "RequireTls",
          type: "boolean",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Role",
          qualifiedName: "Role",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:iam_role"],
        },
        {
          name: "SecurityGroups",
          qualifiedName: "SecurityGroups",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "resource",
          resourceTypes: ["aws:security_group"],
        },
        {
          name: "Subnets",
          qualifiedName: "Subnets",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "resource",
          resourceTypes: ["aws:subnet"],
        },
      ],
      displayName: "RDS Proxy",
      views: {},
    },
  ],
  [
    "aws:rds_proxy_target_group",
    {
      provider: "aws",
      type: "rds_proxy_target_group",
      classifications: ["rds_proxy_target_group"],
      properties: [
        {
          name: "ConnectionPoolConfigurationInfo",
          qualifiedName: "ConnectionPoolConfigurationInfo",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "map",
          properties: [
            {
              name: "ConnectionBorrowTimeout",
              qualifiedName:
                "ConnectionPoolConfigurationInfo.ConnectionBorrowTimeout",
              type: "integer",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "InitQuery",
              qualifiedName: "ConnectionPoolConfigurationInfo.InitQuery",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "MaxConnectionsPercent",
              qualifiedName:
                "ConnectionPoolConfigurationInfo.MaxConnectionsPercent",
              type: "integer",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "MaxIdleConnectionsPercent",
              qualifiedName:
                "ConnectionPoolConfigurationInfo.MaxIdleConnectionsPercent",
              type: "integer",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "SessionPinningFilters",
              qualifiedName:
                "ConnectionPoolConfigurationInfo.SessionPinningFilters",
              type: "list",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              itemType: "string",
            },
          ],
        },
        {
          name: "RdsInstance",
          qualifiedName: "RdsInstance",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:rds_instance"],
        },
        {
          name: "RdsProxy",
          qualifiedName: "RdsProxy",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:rds_proxy"],
        },
        {
          name: "TargetGroupName",
          qualifiedName: "TargetGroupName",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
      ],
      displayName: "RDS Proxy Target Group",
      views: {},
    },
  ],
  [
    "aws:rds_subnet_group",
    {
      provider: "aws",
      type: "rds_subnet_group",
      classifications: null,
      properties: [
        {
          name: "Subnets",
          qualifiedName: "Subnets",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "resource",
          resourceTypes: ["aws:subnet"],
        },
        {
          name: "Tags",
          qualifiedName: "Tags",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "string",
        },
      ],
      displayName: "RDS Subnet Group",
      views: {},
    },
  ],
  [
    "aws:region",
    {
      provider: "aws",
      type: "region",
      classifications: null,
      properties: [],
      displayName: "Region",
      views: {},
    },
  ],
  [
    "aws:rest_api",
    {
      provider: "aws",
      type: "rest_api",
      classifications: [
        "serverless",
        "api",
        "highly_available",
        "scalable",
        "reliable",
      ],
      properties: [
        {
          name: "BinaryMediaTypes",
          qualifiedName: "BinaryMediaTypes",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "string",
        },
        {
          name: "ChildResources",
          qualifiedName: "ChildResources",
          type: "string",
          configurationDisabled: true,
          deployTime: true,
          required: false,
        },
        {
          name: "Stages",
          qualifiedName: "Stages",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "resource",
          resourceTypes: ["aws:api_stage"],
        },
        {
          name: "Routes",
          qualifiedName: "Routes",
          type: "list",
          itemType: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          hidden: true,
          synthetic: true,
          properties: [
            {
              name: "Method",
              qualifiedName: "Routes.Method",
              type: "enum",
              required: true,
              defaultValue: "GET",
              allowedValues: [
                "GET",
                "POST",
                "PUT",
                "DELETE",
                "PATCH",
                "HEAD",
                "OPTIONS",
                "ANY",
              ],
            },
            {
              name: "Path",
              qualifiedName: "Routes.Path",
              type: "string",
              required: true,
              defaultValue: "/",
            },
            {
              name: "MethodResource",
              qualifiedName: "Routes.MethodResource",
              type: "resource",
              required: true,
              hidden: true,
            },
            {
              name: "IntegrationResource",
              qualifiedName: "Routes.Integration",
              type: "resource",
              required: true,
              hidden: true,
            },
          ],
        },
      ],
      displayName: "REST API",
      views: {},
    },
  ],
  [
    "aws:route_table",
    {
      provider: "aws",
      type: "route_table",
      classifications: null,
      properties: [
        {
          name: "Routes",
          qualifiedName: "Routes",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "map",
          properties: [
            {
              name: "CidrBlock",
              qualifiedName: "Routes.CidrBlock",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "Gateway",
              qualifiedName: "Routes.Gateway",
              type: "resource",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              resourceTypes: ["aws:internet_gateway"],
            },
            {
              name: "NatGateway",
              qualifiedName: "Routes.NatGateway",
              type: "resource",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              resourceTypes: ["aws:nat_gateway"],
            },
          ],
        },
        {
          name: "Vpc",
          qualifiedName: "Vpc",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:vpc"],
        },
      ],
      displayName: "Route Table",
      views: {},
    },
  ],
  [
    "aws:route_table_association",
    {
      provider: "aws",
      type: "route_table_association",
      classifications: null,
      properties: [
        {
          name: "RouteTable",
          qualifiedName: "RouteTable",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:route_table"],
        },
        {
          name: "Subnet",
          qualifiedName: "Subnet",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:subnet"],
        },
      ],
      displayName: "Route Table Association",
      views: {},
    },
  ],
  [
    "aws:s3_bucket",
    {
      provider: "aws",
      type: "s3_bucket",
      classifications: ["storage", "blob"],
      properties: [
        {
          name: "AllBucketDirectory",
          qualifiedName: "AllBucketDirectory",
          type: "string",
          configurationDisabled: true,
          deployTime: true,
          required: false,
        },
        {
          name: "Arn",
          qualifiedName: "Arn",
          type: "string",
          configurationDisabled: true,
          deployTime: true,
          required: false,
        },
        {
          name: "BucketName",
          qualifiedName: "BucketName",
          type: "string",
          configurationDisabled: true,
          deployTime: true,
          required: false,
        },
        {
          name: "BucketRegionalDomainName",
          qualifiedName: "BucketRegionalDomainName",
          type: "string",
          configurationDisabled: true,
          deployTime: true,
          required: false,
        },
        {
          name: "ForceDestroy",
          qualifiedName: "ForceDestroy",
          type: "boolean",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "IndexDocument",
          qualifiedName: "IndexDocument",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
      ],
      displayName: "S3 Bucket",
      views: {},
    },
  ],
  [
    "aws:s3_bucket_policy",
    {
      provider: "aws",
      type: "s3_bucket_policy",
      classifications: ["blob"],
      properties: [
        {
          name: "Bucket",
          qualifiedName: "Bucket",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:s3_bucket"],
        },
        {
          name: "Policy",
          qualifiedName: "Policy",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "map",
          properties: [
            {
              name: "Statement",
              qualifiedName: "Policy.Statement",
              type: "list",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              itemType: "map",
              properties: [
                {
                  name: "Action",
                  qualifiedName: "Policy.Statement.Action",
                  type: "list",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  itemType: "string",
                },
                {
                  name: "Condition",
                  qualifiedName: "Policy.Statement.Condition",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "map",
                  properties: [
                    {
                      name: "StringEquals",
                      qualifiedName: "Policy.Statement.Condition.StringEquals",
                      type: "map",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      keyType: "string",
                      valueType: "string",
                    },
                    {
                      name: "StringLike",
                      qualifiedName: "Policy.Statement.Condition.StringLike",
                      type: "map",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      keyType: "string",
                      valueType: "string",
                    },
                  ],
                },
                {
                  name: "Effect",
                  qualifiedName: "Policy.Statement.Effect",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "Principal",
                  qualifiedName: "Policy.Statement.Principal",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "map",
                  properties: [
                    {
                      name: "AWS",
                      qualifiedName: "Policy.Statement.Principal.AWS",
                      type: "list",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      itemType: "string",
                    },
                    {
                      name: "Federated",
                      qualifiedName: "Policy.Statement.Principal.Federated",
                      type: "list",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      itemType: "string",
                    },
                    {
                      name: "Service",
                      qualifiedName: "Policy.Statement.Principal.Service",
                      type: "list",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      itemType: "string",
                    },
                  ],
                },
                {
                  name: "Resource",
                  qualifiedName: "Policy.Statement.Resource",
                  type: "list",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  itemType: "string",
                },
              ],
            },
            {
              name: "Version",
              qualifiedName: "Policy.Version",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
          ],
        },
      ],
      displayName: "S3 Bucket Policy",
      views: {},
    },
  ],
  [
    "aws:s3_object",
    {
      provider: "aws",
      type: "s3_object",
      classifications: ["blob"],
      properties: [
        {
          name: "Bucket",
          qualifiedName: "Bucket",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:s3_bucket"],
        },
        {
          name: "FilePath",
          qualifiedName: "FilePath",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Key",
          qualifiedName: "Key",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
      ],
      displayName: "S3 Object",
      views: {},
    },
  ],
  [
    "aws:secret",
    {
      provider: "aws",
      type: "secret",
      classifications: ["secret", "storage"],
      properties: [
        {
          name: "Arn",
          qualifiedName: "Arn",
          type: "string",
          configurationDisabled: true,
          deployTime: true,
          required: false,
        },
      ],
      displayName: "Secret",
      views: {},
    },
  ],
  [
    "aws:secret_version",
    {
      provider: "aws",
      type: "secret_version",
      classifications: null,
      properties: [
        {
          name: "Content",
          qualifiedName: "Content",
          type: "string",
          configurationDisabled: true,
          deployTime: false,
          required: false,
        },
        {
          name: "Secret",
          qualifiedName: "Secret",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:secret"],
        },
        {
          name: "Type",
          qualifiedName: "Type",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
      ],
      displayName: "Secret Version",
      views: {},
    },
  ],
  [
    "aws:security_group",
    {
      provider: "aws",
      type: "security_group",
      classifications: ["network"],
      properties: [
        {
          name: "EgressRules",
          qualifiedName: "EgressRules",
          type: "set",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "set",
          properties: [
            {
              name: "CidrBlocks",
              qualifiedName: "EgressRules.CidrBlocks",
              type: "list",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              itemType: "string",
            },
            {
              name: "Description",
              qualifiedName: "EgressRules.Description",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "FromPort",
              qualifiedName: "EgressRules.FromPort",
              type: "integer",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "Protocol",
              qualifiedName: "EgressRules.Protocol",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "Self",
              qualifiedName: "EgressRules.Self",
              type: "boolean",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "ToPort",
              qualifiedName: "EgressRules.ToPort",
              type: "integer",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
          ],
        },
        {
          name: "IngressRules",
          qualifiedName: "IngressRules",
          type: "set",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "set",
          properties: [
            {
              name: "CidrBlocks",
              qualifiedName: "IngressRules.CidrBlocks",
              type: "list",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              itemType: "string",
            },
            {
              name: "Description",
              qualifiedName: "IngressRules.Description",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "FromPort",
              qualifiedName: "IngressRules.FromPort",
              type: "integer",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "Protocol",
              qualifiedName: "IngressRules.Protocol",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "Self",
              qualifiedName: "IngressRules.Self",
              type: "boolean",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "ToPort",
              qualifiedName: "IngressRules.ToPort",
              type: "integer",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
          ],
        },
        {
          name: "Vpc",
          qualifiedName: "Vpc",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:vpc"],
        },
      ],
      displayName: "Security Group",
      views: {},
    },
  ],
  [
    "aws:ses_email_identity",
    {
      provider: "aws",
      type: "ses_email_identity",
      classifications: ["messaging", "email"],
      properties: [
        {
          name: "Arn",
          qualifiedName: "Arn",
          type: "string",
          configurationDisabled: true,
          deployTime: true,
          required: false,
        },
        {
          name: "EmailIdentity",
          qualifiedName: "EmailIdentity",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
      ],
      displayName: "SES Email Identity",
      views: {},
    },
  ],
  [
    "aws:sqs_queue",
    {
      provider: "aws",
      type: "sqs_queue",
      classifications: ["queue"],
      properties: [
        {
          name: "Arn",
          qualifiedName: "Arn",
          type: "string",
          configurationDisabled: true,
          deployTime: true,
          required: false,
        },
        {
          name: "DelaySeconds",
          qualifiedName: "DelaySeconds",
          type: "integer",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "FifoQueue",
          qualifiedName: "FifoQueue",
          type: "boolean",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "MaxMessageSize",
          qualifiedName: "MaxMessageSize",
          type: "integer",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Tags",
          qualifiedName: "Tags",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "string",
        },
        {
          name: "VisibilityTimeout",
          qualifiedName: "VisibilityTimeout",
          type: "integer",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
      ],
      displayName: "SQS Queue",
      views: {},
    },
  ],
  [
    "aws:subnet",
    {
      provider: "aws",
      type: "subnet",
      classifications: ["network"],
      properties: [
        {
          name: "AvailabilityZone",
          qualifiedName: "AvailabilityZone",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: true,
          resourceTypes: ["aws:availability_zone"],
        },
        {
          name: "CidrBlock",
          qualifiedName: "CidrBlock",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "MapPublicIpOnLaunch",
          qualifiedName: "MapPublicIpOnLaunch",
          type: "boolean",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "RouteTable",
          qualifiedName: "RouteTable",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:route_table"],
        },
        {
          name: "Type",
          qualifiedName: "Type",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: true,
        },
        {
          name: "Vpc",
          qualifiedName: "Vpc",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: true,
          resourceTypes: ["aws:vpc"],
        },
      ],
      displayName: "Subnet",
      views: {},
    },
  ],
  [
    "aws:target_group",
    {
      provider: "aws",
      type: "target_group",
      classifications: null,
      properties: [
        {
          name: "Port",
          qualifiedName: "Port",
          type: "integer",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Protocol",
          qualifiedName: "Protocol",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Targets",
          qualifiedName: "Targets",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "map",
          properties: [
            {
              name: "Id",
              qualifiedName: "Targets.Id",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "Port",
              qualifiedName: "Targets.Port",
              type: "integer",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
          ],
        },
        {
          name: "TargetType",
          qualifiedName: "TargetType",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Vpc",
          qualifiedName: "Vpc",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:vpc"],
        },
      ],
      displayName: "Target Group",
      views: {},
    },
  ],
  [
    "aws:vpc",
    {
      provider: "aws",
      type: "vpc",
      classifications: ["network", "virtual_network"],
      properties: [
        {
          name: "CidrBlock",
          qualifiedName: "CidrBlock",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: true,
        },
        {
          name: "EnableDnsHostnames",
          qualifiedName: "EnableDnsHostnames",
          type: "boolean",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "EnableDnsSupport",
          qualifiedName: "EnableDnsSupport",
          type: "boolean",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
      ],
      displayName: "VPC",
      views: {},
    },
  ],
  [
    "aws:vpc_endpoint",
    {
      provider: "aws",
      type: "vpc_endpoint",
      classifications: ["service_endpoint"],
      properties: [
        {
          name: "Region",
          qualifiedName: "Region",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "RouteTables",
          qualifiedName: "RouteTables",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "resource",
          resourceTypes: ["aws:route_table"],
        },
        {
          name: "SecurityGroups",
          qualifiedName: "SecurityGroups",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "resource",
          resourceTypes: ["aws:security_group"],
        },
        {
          name: "ServiceName",
          qualifiedName: "ServiceName",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Subnets",
          qualifiedName: "Subnets",
          type: "list",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          itemType: "resource",
          resourceTypes: ["aws:subnet"],
        },
        {
          name: "Vpc",
          qualifiedName: "Vpc",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:vpc"],
        },
        {
          name: "VpcEndpointType",
          qualifiedName: "VpcEndpointType",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
      ],
      displayName: "VPC Endpoint",
      views: {},
    },
  ],
  [
    "aws:vpc_link",
    {
      provider: "aws",
      type: "vpc_link",
      classifications: null,
      properties: [
        {
          name: "Target",
          qualifiedName: "Target",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: ["aws:load_balancer"],
        },
      ],
      displayName: "VPC Link",
      views: {},
    },
  ],
  [
    "kubernetes:cluster_set",
    {
      provider: "kubernetes",
      type: "cluster_set",
      classifications: null,
      properties: [
        {
          name: "Cluster",
          qualifiedName: "Cluster",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: [],
        },
        {
          name: "Object",
          qualifiedName: "Object",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "map",
          properties: [
            {
              name: "ApiVersion",
              qualifiedName: "Object.ApiVersion",
              type: "string",
              configurationDisabled: true,
              deployTime: false,
              required: false,
            },
            {
              name: "Kind",
              qualifiedName: "Object.Kind",
              type: "string",
              configurationDisabled: true,
              deployTime: false,
              required: false,
            },
            {
              name: "Metadata",
              qualifiedName: "Object.Metadata",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "map",
              properties: [
                {
                  name: "Annotations",
                  qualifiedName: "Object.Metadata.Annotations",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "Labels",
                  qualifiedName: "Object.Metadata.Labels",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "Name",
                  qualifiedName: "Object.Metadata.Name",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "Namespace",
                  qualifiedName: "Object.Metadata.Namespace",
                  type: "resource",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  resourceTypes: ["kubernetes:namespace"],
                },
              ],
            },
            {
              name: "Spec",
              qualifiedName: "Object.Spec",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
          ],
        },
      ],
      displayName: "ClusterSet",
      views: {},
    },
  ],
  [
    "kubernetes:config_map",
    {
      provider: "kubernetes",
      type: "config_map",
      classifications: null,
      properties: [
        {
          name: "Cluster",
          qualifiedName: "Cluster",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: [],
        },
        {
          name: "Object",
          qualifiedName: "Object",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "map",
          properties: [
            {
              name: "ApiVersion",
              qualifiedName: "Object.ApiVersion",
              type: "string",
              configurationDisabled: true,
              deployTime: false,
              required: false,
            },
            {
              name: "Data",
              qualifiedName: "Object.Data",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "string",
            },
            {
              name: "Immutable",
              qualifiedName: "Object.Immutable",
              type: "boolean",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "Kind",
              qualifiedName: "Object.Kind",
              type: "string",
              configurationDisabled: true,
              deployTime: false,
              required: false,
            },
            {
              name: "Metadata",
              qualifiedName: "Object.Metadata",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "map",
              properties: [
                {
                  name: "Annotations",
                  qualifiedName: "Object.Metadata.Annotations",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "Labels",
                  qualifiedName: "Object.Metadata.Labels",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "Name",
                  qualifiedName: "Object.Metadata.Name",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "Namespace",
                  qualifiedName: "Object.Metadata.Namespace",
                  type: "resource",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  resourceTypes: ["kubernetes:namespace"],
                },
              ],
            },
          ],
        },
      ],
      displayName: "ConfigMap",
      views: {},
    },
  ],
  [
    "kubernetes:deployment",
    {
      provider: "kubernetes",
      type: "deployment",
      classifications: ["compute", "container", "replicas"],
      properties: [
        {
          name: "Cluster",
          qualifiedName: "Cluster",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: [],
        },
        {
          name: "Object",
          qualifiedName: "Object",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "map",
          properties: [
            {
              name: "ApiVersion",
              qualifiedName: "Object.ApiVersion",
              type: "string",
              configurationDisabled: true,
              deployTime: false,
              required: false,
            },
            {
              name: "Kind",
              qualifiedName: "Object.Kind",
              type: "string",
              configurationDisabled: true,
              deployTime: false,
              required: false,
            },
            {
              name: "Metadata",
              qualifiedName: "Object.Metadata",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "map",
              properties: [
                {
                  name: "Annotations",
                  qualifiedName: "Object.Metadata.Annotations",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "Labels",
                  qualifiedName: "Object.Metadata.Labels",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "Name",
                  qualifiedName: "Object.Metadata.Name",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "Namespace",
                  qualifiedName: "Object.Metadata.Namespace",
                  type: "resource",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  resourceTypes: ["kubernetes:namespace"],
                },
              ],
            },
            {
              name: "Spec",
              qualifiedName: "Object.Spec",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "map",
              properties: [
                {
                  name: "Replicas",
                  qualifiedName: "Object.Spec.Replicas",
                  type: "integer",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "Selector",
                  qualifiedName: "Object.Spec.Selector",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "map",
                  properties: [
                    {
                      name: "MatchExpressions",
                      qualifiedName: "Object.Spec.Selector.MatchExpressions",
                      type: "list",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      itemType: "map",
                      properties: [
                        {
                          name: "Key",
                          qualifiedName:
                            "Object.Spec.Selector.MatchExpressions.Key",
                          type: "string",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                        },
                        {
                          name: "Operator",
                          qualifiedName:
                            "Object.Spec.Selector.MatchExpressions.Operator",
                          type: "string",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                        },
                        {
                          name: "Values",
                          qualifiedName:
                            "Object.Spec.Selector.MatchExpressions.Values",
                          type: "list",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                          itemType: "string",
                        },
                      ],
                    },
                    {
                      name: "MatchLabels",
                      qualifiedName: "Object.Spec.Selector.MatchLabels",
                      type: "map",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      keyType: "string",
                      valueType: "string",
                    },
                  ],
                },
                {
                  name: "Strategy",
                  qualifiedName: "Object.Spec.Strategy",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "map",
                  properties: [
                    {
                      name: "RollingUpdate",
                      qualifiedName: "Object.Spec.Strategy.RollingUpdate",
                      type: "map",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      keyType: "string",
                      valueType: "map",
                      properties: [
                        {
                          name: "MaxSurge",
                          qualifiedName:
                            "Object.Spec.Strategy.RollingUpdate.MaxSurge",
                          type: "string",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                        },
                        {
                          name: "MaxUnavailable",
                          qualifiedName:
                            "Object.Spec.Strategy.RollingUpdate.MaxUnavailable",
                          type: "string",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                        },
                      ],
                    },
                    {
                      name: "Type",
                      qualifiedName: "Object.Spec.Strategy.Type",
                      type: "string",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                    },
                  ],
                },
                {
                  name: "Template",
                  qualifiedName: "Object.Spec.Template",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "map",
                  properties: [
                    {
                      name: "Annotations",
                      qualifiedName: "Object.Spec.Template.Annotations",
                      type: "map",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      keyType: "string",
                      valueType: "string",
                    },
                    {
                      name: "Labels",
                      qualifiedName: "Object.Spec.Template.Labels",
                      type: "map",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      keyType: "string",
                      valueType: "string",
                    },
                    {
                      name: "Name",
                      qualifiedName: "Object.Spec.Template.Name",
                      type: "string",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                    },
                    {
                      name: "Namespace",
                      qualifiedName: "Object.Spec.Template.Namespace",
                      type: "resource",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      resourceTypes: ["kubernetes:namespace"],
                    },
                    {
                      name: "Spec",
                      qualifiedName: "Object.Spec.Template.Spec",
                      type: "map",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      keyType: "string",
                      valueType: "map",
                      properties: [
                        {
                          name: "AutomountServiceAccountToken",
                          qualifiedName:
                            "Object.Spec.Template.Spec.AutomountServiceAccountToken",
                          type: "boolean",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                        },
                        {
                          name: "Containers",
                          qualifiedName: "Object.Spec.Template.Spec.Containers",
                          type: "list",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                          itemType: "map",
                          properties: [
                            {
                              name: "Args",
                              qualifiedName:
                                "Object.Spec.Template.Spec.Containers.Args",
                              type: "list",
                              configurationDisabled: false,
                              deployTime: false,
                              required: false,
                              itemType: "string",
                            },
                            {
                              name: "Command",
                              qualifiedName:
                                "Object.Spec.Template.Spec.Containers.Command",
                              type: "list",
                              configurationDisabled: false,
                              deployTime: false,
                              required: false,
                              itemType: "string",
                            },
                            {
                              name: "Env",
                              qualifiedName:
                                "Object.Spec.Template.Spec.Containers.Env",
                              type: "list",
                              configurationDisabled: false,
                              deployTime: false,
                              required: false,
                              itemType: "map",
                              properties: [
                                {
                                  name: "Name",
                                  qualifiedName:
                                    "Object.Spec.Template.Spec.Containers.Env.Name",
                                  type: "string",
                                  configurationDisabled: false,
                                  deployTime: false,
                                  required: false,
                                },
                                {
                                  name: "Value",
                                  qualifiedName:
                                    "Object.Spec.Template.Spec.Containers.Env.Value",
                                  type: "string",
                                  configurationDisabled: false,
                                  deployTime: false,
                                  required: false,
                                },
                              ],
                            },
                            {
                              name: "Image",
                              qualifiedName:
                                "Object.Spec.Template.Spec.Containers.Image",
                              type: "resource",
                              configurationDisabled: false,
                              deployTime: false,
                              required: true,
                              resourceTypes: [],
                            },
                            {
                              name: "Name",
                              qualifiedName:
                                "Object.Spec.Template.Spec.Containers.Name",
                              type: "string",
                              configurationDisabled: false,
                              deployTime: false,
                              required: true,
                            },
                            {
                              name: "Ports",
                              qualifiedName:
                                "Object.Spec.Template.Spec.Containers.Ports",
                              type: "list",
                              configurationDisabled: false,
                              deployTime: false,
                              required: false,
                              itemType: "map",
                              properties: [
                                {
                                  name: "ContainerPort",
                                  qualifiedName:
                                    "Object.Spec.Template.Spec.Containers.Ports.ContainerPort",
                                  type: "integer",
                                  configurationDisabled: false,
                                  deployTime: false,
                                  required: false,
                                },
                                {
                                  name: "HostIP",
                                  qualifiedName:
                                    "Object.Spec.Template.Spec.Containers.Ports.HostIP",
                                  type: "string",
                                  configurationDisabled: false,
                                  deployTime: false,
                                  required: false,
                                },
                                {
                                  name: "HostPort",
                                  qualifiedName:
                                    "Object.Spec.Template.Spec.Containers.Ports.HostPort",
                                  type: "integer",
                                  configurationDisabled: false,
                                  deployTime: false,
                                  required: false,
                                },
                                {
                                  name: "Name",
                                  qualifiedName:
                                    "Object.Spec.Template.Spec.Containers.Ports.Name",
                                  type: "string",
                                  configurationDisabled: false,
                                  deployTime: false,
                                  required: false,
                                },
                                {
                                  name: "Protocol",
                                  qualifiedName:
                                    "Object.Spec.Template.Spec.Containers.Ports.Protocol",
                                  type: "string",
                                  configurationDisabled: false,
                                  deployTime: false,
                                  required: false,
                                },
                              ],
                            },
                            {
                              name: "Resources",
                              qualifiedName:
                                "Object.Spec.Template.Spec.Containers.Resources",
                              type: "map",
                              configurationDisabled: false,
                              deployTime: false,
                              required: false,
                              keyType: "string",
                              valueType: "map",
                              properties: [
                                {
                                  name: "Limits",
                                  qualifiedName:
                                    "Object.Spec.Template.Spec.Containers.Resources.Limits",
                                  type: "map",
                                  configurationDisabled: false,
                                  deployTime: false,
                                  required: false,
                                  keyType: "string",
                                  valueType: "string",
                                },
                                {
                                  name: "Requests",
                                  qualifiedName:
                                    "Object.Spec.Template.Spec.Containers.Resources.Requests",
                                  type: "map",
                                  configurationDisabled: false,
                                  deployTime: false,
                                  required: false,
                                  keyType: "string",
                                  valueType: "string",
                                },
                              ],
                            },
                            {
                              name: "VolumeMounts",
                              qualifiedName:
                                "Object.Spec.Template.Spec.Containers.VolumeMounts",
                              type: "list",
                              configurationDisabled: false,
                              deployTime: false,
                              required: false,
                              itemType: "map",
                              properties: [
                                {
                                  name: "MountPath",
                                  qualifiedName:
                                    "Object.Spec.Template.Spec.Containers.VolumeMounts.MountPath",
                                  type: "string",
                                  configurationDisabled: false,
                                  deployTime: false,
                                  required: false,
                                },
                                {
                                  name: "MountPropagation",
                                  qualifiedName:
                                    "Object.Spec.Template.Spec.Containers.VolumeMounts.MountPropagation",
                                  type: "string",
                                  configurationDisabled: false,
                                  deployTime: false,
                                  required: false,
                                },
                                {
                                  name: "Name",
                                  qualifiedName:
                                    "Object.Spec.Template.Spec.Containers.VolumeMounts.Name",
                                  type: "string",
                                  configurationDisabled: false,
                                  deployTime: false,
                                  required: false,
                                },
                                {
                                  name: "ReadOnly",
                                  qualifiedName:
                                    "Object.Spec.Template.Spec.Containers.VolumeMounts.ReadOnly",
                                  type: "boolean",
                                  configurationDisabled: false,
                                  deployTime: false,
                                  required: false,
                                },
                                {
                                  name: "SubPath",
                                  qualifiedName:
                                    "Object.Spec.Template.Spec.Containers.VolumeMounts.SubPath",
                                  type: "string",
                                  configurationDisabled: false,
                                  deployTime: false,
                                  required: false,
                                },
                                {
                                  name: "SubPathExpr",
                                  qualifiedName:
                                    "Object.Spec.Template.Spec.Containers.VolumeMounts.SubPathExpr",
                                  type: "string",
                                  configurationDisabled: false,
                                  deployTime: false,
                                  required: false,
                                },
                              ],
                            },
                            {
                              name: "WorkingDir",
                              qualifiedName:
                                "Object.Spec.Template.Spec.Containers.WorkingDir",
                              type: "string",
                              configurationDisabled: false,
                              deployTime: false,
                              required: false,
                            },
                          ],
                        },
                        {
                          name: "NodeSelector",
                          qualifiedName:
                            "Object.Spec.Template.Spec.NodeSelector",
                          type: "map",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                          keyType: "string",
                          valueType: "string",
                        },
                        {
                          name: "ServiceAccountName",
                          qualifiedName:
                            "Object.Spec.Template.Spec.ServiceAccountName",
                          type: "resource",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                          resourceTypes: ["kubernetes:service_account"],
                        },
                        {
                          name: "Volumes",
                          qualifiedName: "Object.Spec.Template.Spec.Volumes",
                          type: "list",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                          itemType: "map",
                          properties: [
                            {
                              name: "Name",
                              qualifiedName:
                                "Object.Spec.Template.Spec.Volumes.Name",
                              type: "string",
                              configurationDisabled: false,
                              deployTime: false,
                              required: false,
                            },
                            {
                              name: "VolumeSource",
                              qualifiedName:
                                "Object.Spec.Template.Spec.Volumes.VolumeSource",
                              type: "map",
                              configurationDisabled: false,
                              deployTime: false,
                              required: false,
                              keyType: "string",
                              valueType: "map",
                              properties: [
                                {
                                  name: "PersistentVolumeClaim",
                                  qualifiedName:
                                    "Object.Spec.Template.Spec.Volumes.VolumeSource.PersistentVolumeClaim",
                                  type: "map",
                                  configurationDisabled: false,
                                  deployTime: false,
                                  required: false,
                                  keyType: "string",
                                  valueType: "map",
                                  properties: [
                                    {
                                      name: "ClaimName",
                                      qualifiedName:
                                        "Object.Spec.Template.Spec.Volumes.VolumeSource.PersistentVolumeClaim.ClaimName",
                                      type: "string",
                                      configurationDisabled: false,
                                      deployTime: false,
                                      required: false,
                                    },
                                    {
                                      name: "ReadOnly",
                                      qualifiedName:
                                        "Object.Spec.Template.Spec.Volumes.VolumeSource.PersistentVolumeClaim.ReadOnly",
                                      type: "boolean",
                                      configurationDisabled: false,
                                      deployTime: false,
                                      required: false,
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      displayName: "Deployment",
      views: {},
    },
  ],
  [
    "kubernetes:helm_chart",
    {
      provider: "kubernetes",
      type: "helm_chart",
      classifications: null,
      properties: [
        {
          name: "Chart",
          qualifiedName: "Chart",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Cluster",
          qualifiedName: "Cluster",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: [],
        },
        {
          name: "Internal",
          qualifiedName: "Internal",
          type: "boolean",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Namespace",
          qualifiedName: "Namespace",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Repo",
          qualifiedName: "Repo",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
        {
          name: "Values",
          qualifiedName: "Values",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "string",
        },
        {
          name: "Version",
          qualifiedName: "Version",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
      ],
      displayName: "Helm Chart",
      views: {},
    },
  ],
  [
    "kubernetes:horizontal_pod_autoscaler",
    {
      provider: "kubernetes",
      type: "horizontal_pod_autoscaler",
      classifications: ["kubernetes"],
      properties: [
        {
          name: "Cluster",
          qualifiedName: "Cluster",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: [],
        },
        {
          name: "Object",
          qualifiedName: "Object",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "map",
          properties: [
            {
              name: "ApiVersion",
              qualifiedName: "Object.ApiVersion",
              type: "string",
              configurationDisabled: true,
              deployTime: false,
              required: false,
            },
            {
              name: "Kind",
              qualifiedName: "Object.Kind",
              type: "string",
              configurationDisabled: true,
              deployTime: false,
              required: false,
            },
            {
              name: "Metadata",
              qualifiedName: "Object.Metadata",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "map",
              properties: [
                {
                  name: "Annotations",
                  qualifiedName: "Object.Metadata.Annotations",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "Labels",
                  qualifiedName: "Object.Metadata.Labels",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "Name",
                  qualifiedName: "Object.Metadata.Name",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "Namespace",
                  qualifiedName: "Object.Metadata.Namespace",
                  type: "resource",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  resourceTypes: ["kubernetes:namespace"],
                },
              ],
            },
            {
              name: "Spec",
              qualifiedName: "Object.Spec",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "map",
              properties: [
                {
                  name: "MaxReplicas",
                  qualifiedName: "Object.Spec.MaxReplicas",
                  type: "integer",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "Metrics",
                  qualifiedName: "Object.Spec.Metrics",
                  type: "list",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  itemType: "map",
                  properties: [
                    {
                      name: "Resource",
                      qualifiedName: "Object.Spec.Metrics.Resource",
                      type: "map",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      keyType: "string",
                      valueType: "map",
                      properties: [
                        {
                          name: "Name",
                          qualifiedName: "Object.Spec.Metrics.Resource.Name",
                          type: "string",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                        },
                        {
                          name: "Target",
                          qualifiedName: "Object.Spec.Metrics.Resource.Target",
                          type: "map",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                          keyType: "string",
                          valueType: "map",
                          properties: [
                            {
                              name: "AverageUtilization",
                              qualifiedName:
                                "Object.Spec.Metrics.Resource.Target.AverageUtilization",
                              type: "integer",
                              configurationDisabled: false,
                              deployTime: false,
                              required: false,
                            },
                            {
                              name: "AverageValue",
                              qualifiedName:
                                "Object.Spec.Metrics.Resource.Target.AverageValue",
                              type: "string",
                              configurationDisabled: false,
                              deployTime: false,
                              required: false,
                            },
                            {
                              name: "Type",
                              qualifiedName:
                                "Object.Spec.Metrics.Resource.Target.Type",
                              type: "string",
                              configurationDisabled: false,
                              deployTime: false,
                              required: false,
                            },
                            {
                              name: "Value",
                              qualifiedName:
                                "Object.Spec.Metrics.Resource.Target.Value",
                              type: "string",
                              configurationDisabled: false,
                              deployTime: false,
                              required: false,
                            },
                          ],
                        },
                      ],
                    },
                    {
                      name: "Type",
                      qualifiedName: "Object.Spec.Metrics.Type",
                      type: "string",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                    },
                  ],
                },
                {
                  name: "MinReplicas",
                  qualifiedName: "Object.Spec.MinReplicas",
                  type: "integer",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "ScaleTargetRef",
                  qualifiedName: "Object.Spec.ScaleTargetRef",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "map",
                  properties: [
                    {
                      name: "ApiVersion",
                      qualifiedName: "Object.Spec.ScaleTargetRef.ApiVersion",
                      type: "string",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                    },
                    {
                      name: "Kind",
                      qualifiedName: "Object.Spec.ScaleTargetRef.Kind",
                      type: "string",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                    },
                    {
                      name: "Name",
                      qualifiedName: "Object.Spec.ScaleTargetRef.Name",
                      type: "string",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      displayName: "Horizontal Pod Autoscaler",
      views: {},
    },
  ],
  [
    "kubernetes:kustomize_directory",
    {
      provider: "kubernetes",
      type: "kustomize_directory",
      classifications: null,
      properties: [
        {
          name: "Cluster",
          qualifiedName: "Cluster",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: [],
        },
        {
          name: "Directory",
          qualifiedName: "Directory",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
      ],
      displayName: "Kustomize Directory",
      views: {},
    },
  ],
  [
    "kubernetes:manifest",
    {
      provider: "kubernetes",
      type: "manifest",
      classifications: null,
      properties: [
        {
          name: "Cluster",
          qualifiedName: "Cluster",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: [],
        },
        {
          name: "FilePath",
          qualifiedName: "FilePath",
          type: "string",
          configurationDisabled: false,
          deployTime: false,
          required: false,
        },
      ],
      displayName: "Kubernetes Manifest",
      views: {},
    },
  ],
  [
    "kubernetes:namespace",
    {
      provider: "kubernetes",
      type: "namespace",
      classifications: null,
      properties: [
        {
          name: "Cluster",
          qualifiedName: "Cluster",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: [],
        },
        {
          name: "Object",
          qualifiedName: "Object",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "map",
          properties: [
            {
              name: "ApiVersion",
              qualifiedName: "Object.ApiVersion",
              type: "string",
              configurationDisabled: true,
              deployTime: false,
              required: false,
            },
            {
              name: "Kind",
              qualifiedName: "Object.Kind",
              type: "string",
              configurationDisabled: true,
              deployTime: false,
              required: false,
            },
            {
              name: "Metadata",
              qualifiedName: "Object.Metadata",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "map",
              properties: [
                {
                  name: "Annotations",
                  qualifiedName: "Object.Metadata.Annotations",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "Labels",
                  qualifiedName: "Object.Metadata.Labels",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "Name",
                  qualifiedName: "Object.Metadata.Name",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "Namespace",
                  qualifiedName: "Object.Metadata.Namespace",
                  type: "resource",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  resourceTypes: ["kubernetes:namespace"],
                },
              ],
            },
          ],
        },
      ],
      displayName: "Namespace",
      views: {},
    },
  ],
  [
    "kubernetes:persistent_volume",
    {
      provider: "kubernetes",
      type: "persistent_volume",
      classifications: null,
      properties: [
        {
          name: "Cluster",
          qualifiedName: "Cluster",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: [],
        },
        {
          name: "Object",
          qualifiedName: "Object",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "map",
          properties: [
            {
              name: "ApiVersion",
              qualifiedName: "Object.ApiVersion",
              type: "string",
              configurationDisabled: true,
              deployTime: false,
              required: false,
            },
            {
              name: "Kind",
              qualifiedName: "Object.Kind",
              type: "string",
              configurationDisabled: true,
              deployTime: false,
              required: false,
            },
            {
              name: "Metadata",
              qualifiedName: "Object.Metadata",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "map",
              properties: [
                {
                  name: "Annotations",
                  qualifiedName: "Object.Metadata.Annotations",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "Labels",
                  qualifiedName: "Object.Metadata.Labels",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "Name",
                  qualifiedName: "Object.Metadata.Name",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "Namespace",
                  qualifiedName: "Object.Metadata.Namespace",
                  type: "resource",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  resourceTypes: ["kubernetes:namespace"],
                },
              ],
            },
            {
              name: "Spec",
              qualifiedName: "Object.Spec",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "map",
              properties: [
                {
                  name: "AccessModes",
                  qualifiedName: "Object.Spec.AccessModes",
                  type: "list",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  itemType: "string",
                },
                {
                  name: "Capacity",
                  qualifiedName: "Object.Spec.Capacity",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "CSI",
                  qualifiedName: "Object.Spec.CSI",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "map",
                  properties: [
                    {
                      name: "Driver",
                      qualifiedName: "Object.Spec.CSI.Driver",
                      type: "string",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                    },
                    {
                      name: "FsType",
                      qualifiedName: "Object.Spec.CSI.FsType",
                      type: "string",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                    },
                    {
                      name: "VolumeAttributes",
                      qualifiedName: "Object.Spec.CSI.VolumeAttributes",
                      type: "map",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      keyType: "string",
                      valueType: "string",
                    },
                    {
                      name: "VolumeHandle",
                      qualifiedName: "Object.Spec.CSI.VolumeHandle",
                      type: "string",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                    },
                  ],
                },
                {
                  name: "MountOptions",
                  qualifiedName: "Object.Spec.MountOptions",
                  type: "list",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  itemType: "string",
                },
                {
                  name: "StorageClassName",
                  qualifiedName: "Object.Spec.StorageClassName",
                  type: "resource",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  resourceTypes: ["kubernetes:storage_class"],
                },
                {
                  name: "VolumeMode",
                  qualifiedName: "Object.Spec.VolumeMode",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
              ],
            },
          ],
        },
      ],
      displayName: "Persistent Volume",
      views: {},
    },
  ],
  [
    "kubernetes:persistent_volume_claim",
    {
      provider: "kubernetes",
      type: "persistent_volume_claim",
      classifications: null,
      properties: [
        {
          name: "Cluster",
          qualifiedName: "Cluster",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: [],
        },
        {
          name: "Object",
          qualifiedName: "Object",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "map",
          properties: [
            {
              name: "ApiVersion",
              qualifiedName: "Object.ApiVersion",
              type: "string",
              configurationDisabled: true,
              deployTime: false,
              required: false,
            },
            {
              name: "Kind",
              qualifiedName: "Object.Kind",
              type: "string",
              configurationDisabled: true,
              deployTime: false,
              required: false,
            },
            {
              name: "Metadata",
              qualifiedName: "Object.Metadata",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "map",
              properties: [
                {
                  name: "Annotations",
                  qualifiedName: "Object.Metadata.Annotations",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "Labels",
                  qualifiedName: "Object.Metadata.Labels",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "Name",
                  qualifiedName: "Object.Metadata.Name",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "Namespace",
                  qualifiedName: "Object.Metadata.Namespace",
                  type: "resource",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  resourceTypes: ["kubernetes:namespace"],
                },
              ],
            },
            {
              name: "Spec",
              qualifiedName: "Object.Spec",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "map",
              properties: [
                {
                  name: "AccessModes",
                  qualifiedName: "Object.Spec.AccessModes",
                  type: "list",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  itemType: "string",
                },
                {
                  name: "Resources",
                  qualifiedName: "Object.Spec.Resources",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "map",
                  properties: [
                    {
                      name: "Limits",
                      qualifiedName: "Object.Spec.Resources.Limits",
                      type: "map",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      keyType: "string",
                      valueType: "string",
                    },
                    {
                      name: "Requests",
                      qualifiedName: "Object.Spec.Resources.Requests",
                      type: "map",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      keyType: "string",
                      valueType: "string",
                    },
                  ],
                },
                {
                  name: "Selector",
                  qualifiedName: "Object.Spec.Selector",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "map",
                  properties: [
                    {
                      name: "MatchExpressions",
                      qualifiedName: "Object.Spec.Selector.MatchExpressions",
                      type: "list",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      itemType: "map",
                      properties: [
                        {
                          name: "Key",
                          qualifiedName:
                            "Object.Spec.Selector.MatchExpressions.Key",
                          type: "string",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                        },
                        {
                          name: "Operator",
                          qualifiedName:
                            "Object.Spec.Selector.MatchExpressions.Operator",
                          type: "string",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                        },
                        {
                          name: "Values",
                          qualifiedName:
                            "Object.Spec.Selector.MatchExpressions.Values",
                          type: "list",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                          itemType: "string",
                        },
                      ],
                    },
                    {
                      name: "MatchLabels",
                      qualifiedName: "Object.Spec.Selector.MatchLabels",
                      type: "map",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      keyType: "string",
                      valueType: "string",
                    },
                  ],
                },
                {
                  name: "StorageClassName",
                  qualifiedName: "Object.Spec.StorageClassName",
                  type: "resource",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  resourceTypes: ["kubernetes:storage_class"],
                },
                {
                  name: "VolumeMode",
                  qualifiedName: "Object.Spec.VolumeMode",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "VolumeName",
                  qualifiedName: "Object.Spec.VolumeName",
                  type: "resource",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  resourceTypes: ["kubernetes:persistent_volume"],
                },
              ],
            },
          ],
        },
      ],
      displayName: "Persistent Volume Claim",
      views: {},
    },
  ],
  [
    "kubernetes:pod",
    {
      provider: "kubernetes",
      type: "pod",
      classifications: ["compute", "container"],
      properties: [
        {
          name: "Cluster",
          qualifiedName: "Cluster",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: [],
        },
        {
          name: "Object",
          qualifiedName: "Object",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "map",
          properties: [
            {
              name: "ApiVersion",
              qualifiedName: "Object.ApiVersion",
              type: "string",
              configurationDisabled: true,
              deployTime: false,
              required: false,
            },
            {
              name: "Kind",
              qualifiedName: "Object.Kind",
              type: "string",
              configurationDisabled: true,
              deployTime: false,
              required: false,
            },
            {
              name: "Metadata",
              qualifiedName: "Object.Metadata",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "map",
              properties: [
                {
                  name: "Annotations",
                  qualifiedName: "Object.Metadata.Annotations",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "Labels",
                  qualifiedName: "Object.Metadata.Labels",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "Name",
                  qualifiedName: "Object.Metadata.Name",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "Namespace",
                  qualifiedName: "Object.Metadata.Namespace",
                  type: "resource",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  resourceTypes: ["kubernetes:namespace"],
                },
              ],
            },
            {
              name: "Spec",
              qualifiedName: "Object.Spec",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "map",
              properties: [
                {
                  name: "AutomountServiceAccountToken",
                  qualifiedName: "Object.Spec.AutomountServiceAccountToken",
                  type: "boolean",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "Containers",
                  qualifiedName: "Object.Spec.Containers",
                  type: "list",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  itemType: "map",
                  properties: [
                    {
                      name: "Args",
                      qualifiedName: "Object.Spec.Containers.Args",
                      type: "list",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      itemType: "string",
                    },
                    {
                      name: "Command",
                      qualifiedName: "Object.Spec.Containers.Command",
                      type: "list",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      itemType: "string",
                    },
                    {
                      name: "Env",
                      qualifiedName: "Object.Spec.Containers.Env",
                      type: "list",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      itemType: "map",
                      properties: [
                        {
                          name: "Name",
                          qualifiedName: "Object.Spec.Containers.Env.Name",
                          type: "string",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                        },
                        {
                          name: "Value",
                          qualifiedName: "Object.Spec.Containers.Env.Value",
                          type: "string",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                        },
                      ],
                    },
                    {
                      name: "Image",
                      qualifiedName: "Object.Spec.Containers.Image",
                      type: "resource",
                      configurationDisabled: false,
                      deployTime: false,
                      required: true,
                      resourceTypes: [],
                    },
                    {
                      name: "Name",
                      qualifiedName: "Object.Spec.Containers.Name",
                      type: "string",
                      configurationDisabled: false,
                      deployTime: false,
                      required: true,
                    },
                    {
                      name: "Ports",
                      qualifiedName: "Object.Spec.Containers.Ports",
                      type: "list",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      itemType: "map",
                      properties: [
                        {
                          name: "ContainerPort",
                          qualifiedName:
                            "Object.Spec.Containers.Ports.ContainerPort",
                          type: "integer",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                        },
                        {
                          name: "HostIP",
                          qualifiedName: "Object.Spec.Containers.Ports.HostIP",
                          type: "string",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                        },
                        {
                          name: "HostPort",
                          qualifiedName:
                            "Object.Spec.Containers.Ports.HostPort",
                          type: "integer",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                        },
                        {
                          name: "Name",
                          qualifiedName: "Object.Spec.Containers.Ports.Name",
                          type: "string",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                        },
                        {
                          name: "Protocol",
                          qualifiedName:
                            "Object.Spec.Containers.Ports.Protocol",
                          type: "string",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                        },
                      ],
                    },
                    {
                      name: "Resources",
                      qualifiedName: "Object.Spec.Containers.Resources",
                      type: "map",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      keyType: "string",
                      valueType: "map",
                      properties: [
                        {
                          name: "Limits",
                          qualifiedName:
                            "Object.Spec.Containers.Resources.Limits",
                          type: "map",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                          keyType: "string",
                          valueType: "string",
                        },
                        {
                          name: "Requests",
                          qualifiedName:
                            "Object.Spec.Containers.Resources.Requests",
                          type: "map",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                          keyType: "string",
                          valueType: "string",
                        },
                      ],
                    },
                    {
                      name: "VolumeMounts",
                      qualifiedName: "Object.Spec.Containers.VolumeMounts",
                      type: "list",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      itemType: "map",
                      properties: [
                        {
                          name: "MountPath",
                          qualifiedName:
                            "Object.Spec.Containers.VolumeMounts.MountPath",
                          type: "string",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                        },
                        {
                          name: "MountPropagation",
                          qualifiedName:
                            "Object.Spec.Containers.VolumeMounts.MountPropagation",
                          type: "string",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                        },
                        {
                          name: "Name",
                          qualifiedName:
                            "Object.Spec.Containers.VolumeMounts.Name",
                          type: "string",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                        },
                        {
                          name: "ReadOnly",
                          qualifiedName:
                            "Object.Spec.Containers.VolumeMounts.ReadOnly",
                          type: "boolean",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                        },
                        {
                          name: "SubPath",
                          qualifiedName:
                            "Object.Spec.Containers.VolumeMounts.SubPath",
                          type: "string",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                        },
                        {
                          name: "SubPathExpr",
                          qualifiedName:
                            "Object.Spec.Containers.VolumeMounts.SubPathExpr",
                          type: "string",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                        },
                      ],
                    },
                    {
                      name: "WorkingDir",
                      qualifiedName: "Object.Spec.Containers.WorkingDir",
                      type: "string",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                    },
                  ],
                },
                {
                  name: "NodeSelector",
                  qualifiedName: "Object.Spec.NodeSelector",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "ServiceAccountName",
                  qualifiedName: "Object.Spec.ServiceAccountName",
                  type: "resource",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  resourceTypes: ["kubernetes:service_account"],
                },
                {
                  name: "Volumes",
                  qualifiedName: "Object.Spec.Volumes",
                  type: "list",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  itemType: "map",
                  properties: [
                    {
                      name: "Name",
                      qualifiedName: "Object.Spec.Volumes.Name",
                      type: "string",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                    },
                    {
                      name: "VolumeSource",
                      qualifiedName: "Object.Spec.Volumes.VolumeSource",
                      type: "map",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                      keyType: "string",
                      valueType: "map",
                      properties: [
                        {
                          name: "PersistentVolumeClaim",
                          qualifiedName:
                            "Object.Spec.Volumes.VolumeSource.PersistentVolumeClaim",
                          type: "map",
                          configurationDisabled: false,
                          deployTime: false,
                          required: false,
                          keyType: "string",
                          valueType: "map",
                          properties: [
                            {
                              name: "ClaimName",
                              qualifiedName:
                                "Object.Spec.Volumes.VolumeSource.PersistentVolumeClaim.ClaimName",
                              type: "string",
                              configurationDisabled: false,
                              deployTime: false,
                              required: false,
                            },
                            {
                              name: "ReadOnly",
                              qualifiedName:
                                "Object.Spec.Volumes.VolumeSource.PersistentVolumeClaim.ReadOnly",
                              type: "boolean",
                              configurationDisabled: false,
                              deployTime: false,
                              required: false,
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      displayName: "Pod",
      views: {},
    },
  ],
  [
    "kubernetes:service",
    {
      provider: "kubernetes",
      type: "service",
      classifications: null,
      properties: [
        {
          name: "Cluster",
          qualifiedName: "Cluster",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: [],
        },
        {
          name: "Object",
          qualifiedName: "Object",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "map",
          properties: [
            {
              name: "ApiVersion",
              qualifiedName: "Object.ApiVersion",
              type: "string",
              configurationDisabled: true,
              deployTime: false,
              required: false,
            },
            {
              name: "Kind",
              qualifiedName: "Object.Kind",
              type: "string",
              configurationDisabled: true,
              deployTime: false,
              required: false,
            },
            {
              name: "Metadata",
              qualifiedName: "Object.Metadata",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "map",
              properties: [
                {
                  name: "Annotations",
                  qualifiedName: "Object.Metadata.Annotations",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "Labels",
                  qualifiedName: "Object.Metadata.Labels",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "Name",
                  qualifiedName: "Object.Metadata.Name",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "Namespace",
                  qualifiedName: "Object.Metadata.Namespace",
                  type: "resource",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  resourceTypes: ["kubernetes:namespace"],
                },
              ],
            },
            {
              name: "Spec",
              qualifiedName: "Object.Spec",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "map",
              properties: [
                {
                  name: "Ports",
                  qualifiedName: "Object.Spec.Ports",
                  type: "list",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  itemType: "map",
                  properties: [
                    {
                      name: "Name",
                      qualifiedName: "Object.Spec.Ports.Name",
                      type: "string",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                    },
                    {
                      name: "NodePort",
                      qualifiedName: "Object.Spec.Ports.NodePort",
                      type: "integer",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                    },
                    {
                      name: "Port",
                      qualifiedName: "Object.Spec.Ports.Port",
                      type: "integer",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                    },
                    {
                      name: "Protocol",
                      qualifiedName: "Object.Spec.Ports.Protocol",
                      type: "string",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                    },
                    {
                      name: "TargetPort",
                      qualifiedName: "Object.Spec.Ports.TargetPort",
                      type: "integer",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                    },
                  ],
                },
                {
                  name: "Selector",
                  qualifiedName: "Object.Spec.Selector",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "ServiceType",
                  qualifiedName: "Object.Spec.ServiceType",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "SessionAffinity",
                  qualifiedName: "Object.Spec.SessionAffinity",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
              ],
            },
          ],
        },
      ],
      displayName: "Service",
      views: {},
    },
  ],
  [
    "kubernetes:service_account",
    {
      provider: "kubernetes",
      type: "service_account",
      classifications: ["role", "kubernetes"],
      properties: [
        {
          name: "Cluster",
          qualifiedName: "Cluster",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: [],
        },
        {
          name: "Object",
          qualifiedName: "Object",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "map",
          properties: [
            {
              name: "ApiVersion",
              qualifiedName: "Object.ApiVersion",
              type: "string",
              configurationDisabled: true,
              deployTime: false,
              required: false,
            },
            {
              name: "AutomountServiceAccountToken",
              qualifiedName: "Object.AutomountServiceAccountToken",
              type: "boolean",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "Kind",
              qualifiedName: "Object.Kind",
              type: "string",
              configurationDisabled: true,
              deployTime: false,
              required: false,
            },
            {
              name: "Metadata",
              qualifiedName: "Object.Metadata",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "map",
              properties: [
                {
                  name: "Annotations",
                  qualifiedName: "Object.Metadata.Annotations",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "Labels",
                  qualifiedName: "Object.Metadata.Labels",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "Name",
                  qualifiedName: "Object.Metadata.Name",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "Namespace",
                  qualifiedName: "Object.Metadata.Namespace",
                  type: "resource",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  resourceTypes: ["kubernetes:namespace"],
                },
              ],
            },
          ],
        },
      ],
      displayName: "Service Account",
      views: {},
    },
  ],
  [
    "kubernetes:service_export",
    {
      provider: "kubernetes",
      type: "service_export",
      classifications: null,
      properties: [
        {
          name: "Cluster",
          qualifiedName: "Cluster",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: [],
        },
        {
          name: "Object",
          qualifiedName: "Object",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "map",
          properties: [
            {
              name: "ApiVersion",
              qualifiedName: "Object.ApiVersion",
              type: "string",
              configurationDisabled: true,
              deployTime: false,
              required: false,
            },
            {
              name: "Kind",
              qualifiedName: "Object.Kind",
              type: "string",
              configurationDisabled: true,
              deployTime: false,
              required: false,
            },
            {
              name: "Metadata",
              qualifiedName: "Object.Metadata",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "map",
              properties: [
                {
                  name: "Annotations",
                  qualifiedName: "Object.Metadata.Annotations",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "Labels",
                  qualifiedName: "Object.Metadata.Labels",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "Name",
                  qualifiedName: "Object.Metadata.Name",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "Namespace",
                  qualifiedName: "Object.Metadata.Namespace",
                  type: "resource",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  resourceTypes: ["kubernetes:namespace"],
                },
              ],
            },
          ],
        },
      ],
      displayName: "Service Export",
      views: {},
    },
  ],
  [
    "kubernetes:storage_class",
    {
      provider: "kubernetes",
      type: "storage_class",
      classifications: null,
      properties: [
        {
          name: "Cluster",
          qualifiedName: "Cluster",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: [],
        },
        {
          name: "Object",
          qualifiedName: "Object",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "map",
          properties: [
            {
              name: "AllowVolumeExpansion",
              qualifiedName: "Object.AllowVolumeExpansion",
              type: "boolean",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "ApiVersion",
              qualifiedName: "Object.ApiVersion",
              type: "string",
              configurationDisabled: true,
              deployTime: false,
              required: false,
            },
            {
              name: "Kind",
              qualifiedName: "Object.Kind",
              type: "string",
              configurationDisabled: true,
              deployTime: false,
              required: false,
            },
            {
              name: "Metadata",
              qualifiedName: "Object.Metadata",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "map",
              properties: [
                {
                  name: "Annotations",
                  qualifiedName: "Object.Metadata.Annotations",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "Labels",
                  qualifiedName: "Object.Metadata.Labels",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "Name",
                  qualifiedName: "Object.Metadata.Name",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "Namespace",
                  qualifiedName: "Object.Metadata.Namespace",
                  type: "resource",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  resourceTypes: ["kubernetes:namespace"],
                },
              ],
            },
            {
              name: "MountOptions",
              qualifiedName: "Object.MountOptions",
              type: "list",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              itemType: "string",
            },
            {
              name: "Parameters",
              qualifiedName: "Object.Parameters",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "string",
            },
            {
              name: "Provisioner",
              qualifiedName: "Object.Provisioner",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "ReclaimPolicy",
              qualifiedName: "Object.ReclaimPolicy",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
            {
              name: "VolumeBindingMode",
              qualifiedName: "Object.VolumeBindingMode",
              type: "string",
              configurationDisabled: false,
              deployTime: false,
              required: false,
            },
          ],
        },
      ],
      displayName: "Storage Class",
      views: {},
    },
  ],
  [
    "kubernetes:target_group_binding",
    {
      provider: "kubernetes",
      type: "target_group_binding",
      classifications: null,
      properties: [
        {
          name: "Cluster",
          qualifiedName: "Cluster",
          type: "resource",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          resourceTypes: [],
        },
        {
          name: "Object",
          qualifiedName: "Object",
          type: "map",
          configurationDisabled: false,
          deployTime: false,
          required: false,
          keyType: "string",
          valueType: "map",
          properties: [
            {
              name: "ApiVersion",
              qualifiedName: "Object.ApiVersion",
              type: "string",
              configurationDisabled: true,
              deployTime: false,
              required: false,
            },
            {
              name: "Kind",
              qualifiedName: "Object.Kind",
              type: "string",
              configurationDisabled: true,
              deployTime: false,
              required: false,
            },
            {
              name: "Metadata",
              qualifiedName: "Object.Metadata",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "map",
              properties: [
                {
                  name: "Annotations",
                  qualifiedName: "Object.Metadata.Annotations",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "Labels",
                  qualifiedName: "Object.Metadata.Labels",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "string",
                },
                {
                  name: "Name",
                  qualifiedName: "Object.Metadata.Name",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "Namespace",
                  qualifiedName: "Object.Metadata.Namespace",
                  type: "resource",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  resourceTypes: ["kubernetes:namespace"],
                },
              ],
            },
            {
              name: "Spec",
              qualifiedName: "Object.Spec",
              type: "map",
              configurationDisabled: false,
              deployTime: false,
              required: false,
              keyType: "string",
              valueType: "map",
              properties: [
                {
                  name: "ServiceRef",
                  qualifiedName: "Object.Spec.ServiceRef",
                  type: "map",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                  keyType: "string",
                  valueType: "map",
                  properties: [
                    {
                      name: "Name",
                      qualifiedName: "Object.Spec.ServiceRef.Name",
                      type: "string",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                    },
                    {
                      name: "Port",
                      qualifiedName: "Object.Spec.ServiceRef.Port",
                      type: "integer",
                      configurationDisabled: false,
                      deployTime: false,
                      required: false,
                    },
                  ],
                },
                {
                  name: "TargetGroupARN",
                  qualifiedName: "Object.Spec.TargetGroupARN",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
                {
                  name: "TargetType",
                  qualifiedName: "Object.Spec.TargetType",
                  type: "string",
                  configurationDisabled: false,
                  deployTime: false,
                  required: false,
                },
              ],
            },
          ],
        },
      ],
      displayName: "Target Group Binding",
      views: {},
    },
  ],
]);

// eslint-disable-next-line import/no-anonymous-default-export
export default new ResourceTypeKB(types as any);
